
RGB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000eac  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001040  08001048  00011048  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001040  08001040  00011048  2**0
                  CONTENTS
  4 .ARM          00000000  08001040  08001040  00011048  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001040  08001048  00011048  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001040  08001040  00011040  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001044  08001044  00011044  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00011048  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08001048  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08001048  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00011048  2**0
                  CONTENTS, READONLY
 12 .debug_info   000006f8  00000000  00000000  00011078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002a9  00000000  00000000  00011770  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000f8  00000000  00000000  00011a20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000c0  00000000  00000000  00011b18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000eff  00000000  00000000  00011bd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000087b  00000000  00000000  00012ad7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004228  00000000  00000000  00013352  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001757a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002e0  00000000  00000000  000175cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08001028 	.word	0x08001028

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08001028 	.word	0x08001028

080001d4 <GPIO_u8SetPinDirection>:
#include "GPIO_config.h"



u8	GPIO_u8SetPinDirection(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Direction)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b084      	sub	sp, #16
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
 80001de:	460b      	mov	r3, r1
 80001e0:	71bb      	strb	r3, [r7, #6]
 80001e2:	4613      	mov	r3, r2
 80001e4:	717b      	strb	r3, [r7, #5]
	u8 Local_u8ErrorState= 0 ;
 80001e6:	2300      	movs	r3, #0
 80001e8:	73fb      	strb	r3, [r7, #15]
	// THE BITS THAT WILL BE ACCESSED TO SET THE DIRECTION IN THE MODE REGISTER TO SET A CERTIAN PIN
	u8 Local_u8Config_Bit1=Copy_u8Pin*2;
 80001ea:	79bb      	ldrb	r3, [r7, #6]
 80001ec:	005b      	lsls	r3, r3, #1
 80001ee:	73bb      	strb	r3, [r7, #14]
	u8 Local_u8Config_Bit2=(Copy_u8Pin*2)+1;
 80001f0:	79bb      	ldrb	r3, [r7, #6]
 80001f2:	005b      	lsls	r3, r3, #1
 80001f4:	b2db      	uxtb	r3, r3
 80001f6:	3301      	adds	r3, #1
 80001f8:	737b      	strb	r3, [r7, #13]
	if(((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN13))||((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN14)))
 80001fa:	79fb      	ldrb	r3, [r7, #7]
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d102      	bne.n	8000206 <GPIO_u8SetPinDirection+0x32>
 8000200:	79bb      	ldrb	r3, [r7, #6]
 8000202:	2b0d      	cmp	r3, #13
 8000204:	d005      	beq.n	8000212 <GPIO_u8SetPinDirection+0x3e>
 8000206:	79fb      	ldrb	r3, [r7, #7]
 8000208:	2b00      	cmp	r3, #0
 800020a:	d106      	bne.n	800021a <GPIO_u8SetPinDirection+0x46>
 800020c:	79bb      	ldrb	r3, [r7, #6]
 800020e:	2b0e      	cmp	r3, #14
 8000210:	d103      	bne.n	800021a <GPIO_u8SetPinDirection+0x46>
	{
		Local_u8ErrorState=4;
 8000212:	2304      	movs	r3, #4
 8000214:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 8000216:	7bfb      	ldrb	r3, [r7, #15]
 8000218:	e124      	b.n	8000464 <GPIO_u8SetPinDirection+0x290>
	}
	if(((Copy_u8Port ==GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN3))||((Copy_u8Port == GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN4)))
 800021a:	79fb      	ldrb	r3, [r7, #7]
 800021c:	2b01      	cmp	r3, #1
 800021e:	d102      	bne.n	8000226 <GPIO_u8SetPinDirection+0x52>
 8000220:	79bb      	ldrb	r3, [r7, #6]
 8000222:	2b03      	cmp	r3, #3
 8000224:	d005      	beq.n	8000232 <GPIO_u8SetPinDirection+0x5e>
 8000226:	79fb      	ldrb	r3, [r7, #7]
 8000228:	2b01      	cmp	r3, #1
 800022a:	d106      	bne.n	800023a <GPIO_u8SetPinDirection+0x66>
 800022c:	79bb      	ldrb	r3, [r7, #6]
 800022e:	2b04      	cmp	r3, #4
 8000230:	d103      	bne.n	800023a <GPIO_u8SetPinDirection+0x66>
	{
		Local_u8ErrorState=4;
 8000232:	2304      	movs	r3, #4
 8000234:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 8000236:	7bfb      	ldrb	r3, [r7, #15]
 8000238:	e114      	b.n	8000464 <GPIO_u8SetPinDirection+0x290>
	}
	if(Copy_u8Pin<=GPIO_u8_PIN15)
 800023a:	79bb      	ldrb	r3, [r7, #6]
 800023c:	2b0f      	cmp	r3, #15
 800023e:	f200 8108 	bhi.w	8000452 <GPIO_u8SetPinDirection+0x27e>
	{
		if(Copy_u8Direction==GPIO_u8_PIN_INPUT)
 8000242:	797b      	ldrb	r3, [r7, #5]
 8000244:	2b00      	cmp	r3, #0
 8000246:	d157      	bne.n	80002f8 <GPIO_u8SetPinDirection+0x124>
		{
			switch (Copy_u8Port)
 8000248:	79fb      	ldrb	r3, [r7, #7]
 800024a:	2b02      	cmp	r3, #2
 800024c:	d034      	beq.n	80002b8 <GPIO_u8SetPinDirection+0xe4>
 800024e:	2b02      	cmp	r3, #2
 8000250:	dc49      	bgt.n	80002e6 <GPIO_u8SetPinDirection+0x112>
 8000252:	2b00      	cmp	r3, #0
 8000254:	d002      	beq.n	800025c <GPIO_u8SetPinDirection+0x88>
 8000256:	2b01      	cmp	r3, #1
 8000258:	d017      	beq.n	800028a <GPIO_u8SetPinDirection+0xb6>
 800025a:	e044      	b.n	80002e6 <GPIO_u8SetPinDirection+0x112>
			{
				case GPIO_u8_PORTA  :
				{
					
					CLR_BIT(GPIOA_MODER,Local_u8Config_Bit1);
 800025c:	4b83      	ldr	r3, [pc, #524]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	7bba      	ldrb	r2, [r7, #14]
 8000262:	2101      	movs	r1, #1
 8000264:	fa01 f202 	lsl.w	r2, r1, r2
 8000268:	43d2      	mvns	r2, r2
 800026a:	4611      	mov	r1, r2
 800026c:	4a7f      	ldr	r2, [pc, #508]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 800026e:	400b      	ands	r3, r1
 8000270:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_MODER,Local_u8Config_Bit2);
 8000272:	4b7e      	ldr	r3, [pc, #504]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	7b7a      	ldrb	r2, [r7, #13]
 8000278:	2101      	movs	r1, #1
 800027a:	fa01 f202 	lsl.w	r2, r1, r2
 800027e:	43d2      	mvns	r2, r2
 8000280:	4611      	mov	r1, r2
 8000282:	4a7a      	ldr	r2, [pc, #488]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 8000284:	400b      	ands	r3, r1
 8000286:	6013      	str	r3, [r2, #0]
					
					
					break;
 8000288:	e02f      	b.n	80002ea <GPIO_u8SetPinDirection+0x116>
				}
				case GPIO_u8_PORTB  :
				{
					CLR_BIT(GPIOB_MODER,Local_u8Config_Bit1);
 800028a:	4b79      	ldr	r3, [pc, #484]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	7bba      	ldrb	r2, [r7, #14]
 8000290:	2101      	movs	r1, #1
 8000292:	fa01 f202 	lsl.w	r2, r1, r2
 8000296:	43d2      	mvns	r2, r2
 8000298:	4611      	mov	r1, r2
 800029a:	4a75      	ldr	r2, [pc, #468]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 800029c:	400b      	ands	r3, r1
 800029e:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_MODER,Local_u8Config_Bit2);
 80002a0:	4b73      	ldr	r3, [pc, #460]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	7b7a      	ldrb	r2, [r7, #13]
 80002a6:	2101      	movs	r1, #1
 80002a8:	fa01 f202 	lsl.w	r2, r1, r2
 80002ac:	43d2      	mvns	r2, r2
 80002ae:	4611      	mov	r1, r2
 80002b0:	4a6f      	ldr	r2, [pc, #444]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 80002b2:	400b      	ands	r3, r1
 80002b4:	6013      	str	r3, [r2, #0]
					break;
 80002b6:	e018      	b.n	80002ea <GPIO_u8SetPinDirection+0x116>
				}
				case GPIO_u8_PORTC :
				{
					CLR_BIT(GPIOC_MODER,Local_u8Config_Bit1);
 80002b8:	4b6e      	ldr	r3, [pc, #440]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	7bba      	ldrb	r2, [r7, #14]
 80002be:	2101      	movs	r1, #1
 80002c0:	fa01 f202 	lsl.w	r2, r1, r2
 80002c4:	43d2      	mvns	r2, r2
 80002c6:	4611      	mov	r1, r2
 80002c8:	4a6a      	ldr	r2, [pc, #424]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 80002ca:	400b      	ands	r3, r1
 80002cc:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_MODER,Local_u8Config_Bit2);
 80002ce:	4b69      	ldr	r3, [pc, #420]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	7b7a      	ldrb	r2, [r7, #13]
 80002d4:	2101      	movs	r1, #1
 80002d6:	fa01 f202 	lsl.w	r2, r1, r2
 80002da:	43d2      	mvns	r2, r2
 80002dc:	4611      	mov	r1, r2
 80002de:	4a65      	ldr	r2, [pc, #404]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 80002e0:	400b      	ands	r3, r1
 80002e2:	6013      	str	r3, [r2, #0]
					break;
 80002e4:	e001      	b.n	80002ea <GPIO_u8SetPinDirection+0x116>
				}
				
				default: Local_u8ErrorState=2;
 80002e6:	2302      	movs	r3, #2
 80002e8:	73fb      	strb	r3, [r7, #15]
			}
			GPIO_u8SetIntputPinType(Copy_u8Port,Copy_u8Pin,DEFAULT_INPUT_TYPE);
 80002ea:	79b9      	ldrb	r1, [r7, #6]
 80002ec:	79fb      	ldrb	r3, [r7, #7]
 80002ee:	2201      	movs	r2, #1
 80002f0:	4618      	mov	r0, r3
 80002f2:	f000 fa7b 	bl	80007ec <GPIO_u8SetIntputPinType>
 80002f6:	e0ae      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
		}
		else if (Copy_u8Direction==GPIO_u8_PIN_OUTPUT)
 80002f8:	797b      	ldrb	r3, [r7, #5]
 80002fa:	2b01      	cmp	r3, #1
 80002fc:	d154      	bne.n	80003a8 <GPIO_u8SetPinDirection+0x1d4>
		{
			switch (Copy_u8Port)
 80002fe:	79fb      	ldrb	r3, [r7, #7]
 8000300:	2b02      	cmp	r3, #2
 8000302:	d032      	beq.n	800036a <GPIO_u8SetPinDirection+0x196>
 8000304:	2b02      	cmp	r3, #2
 8000306:	dc46      	bgt.n	8000396 <GPIO_u8SetPinDirection+0x1c2>
 8000308:	2b00      	cmp	r3, #0
 800030a:	d002      	beq.n	8000312 <GPIO_u8SetPinDirection+0x13e>
 800030c:	2b01      	cmp	r3, #1
 800030e:	d016      	beq.n	800033e <GPIO_u8SetPinDirection+0x16a>
 8000310:	e041      	b.n	8000396 <GPIO_u8SetPinDirection+0x1c2>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_MODER,Local_u8Config_Bit1);
 8000312:	4b56      	ldr	r3, [pc, #344]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	7bba      	ldrb	r2, [r7, #14]
 8000318:	2101      	movs	r1, #1
 800031a:	fa01 f202 	lsl.w	r2, r1, r2
 800031e:	4611      	mov	r1, r2
 8000320:	4a52      	ldr	r2, [pc, #328]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 8000322:	430b      	orrs	r3, r1
 8000324:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_MODER,Local_u8Config_Bit2);
 8000326:	4b51      	ldr	r3, [pc, #324]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	7b7a      	ldrb	r2, [r7, #13]
 800032c:	2101      	movs	r1, #1
 800032e:	fa01 f202 	lsl.w	r2, r1, r2
 8000332:	43d2      	mvns	r2, r2
 8000334:	4611      	mov	r1, r2
 8000336:	4a4d      	ldr	r2, [pc, #308]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 8000338:	400b      	ands	r3, r1
 800033a:	6013      	str	r3, [r2, #0]
					break;
 800033c:	e02d      	b.n	800039a <GPIO_u8SetPinDirection+0x1c6>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_MODER,Local_u8Config_Bit1);
 800033e:	4b4c      	ldr	r3, [pc, #304]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	7bba      	ldrb	r2, [r7, #14]
 8000344:	2101      	movs	r1, #1
 8000346:	fa01 f202 	lsl.w	r2, r1, r2
 800034a:	4611      	mov	r1, r2
 800034c:	4a48      	ldr	r2, [pc, #288]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 800034e:	430b      	orrs	r3, r1
 8000350:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_MODER,Local_u8Config_Bit2);
 8000352:	4b47      	ldr	r3, [pc, #284]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	7b7a      	ldrb	r2, [r7, #13]
 8000358:	2101      	movs	r1, #1
 800035a:	fa01 f202 	lsl.w	r2, r1, r2
 800035e:	43d2      	mvns	r2, r2
 8000360:	4611      	mov	r1, r2
 8000362:	4a43      	ldr	r2, [pc, #268]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 8000364:	400b      	ands	r3, r1
 8000366:	6013      	str	r3, [r2, #0]
					break;
 8000368:	e017      	b.n	800039a <GPIO_u8SetPinDirection+0x1c6>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_MODER,Local_u8Config_Bit1);
 800036a:	4b42      	ldr	r3, [pc, #264]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	7bba      	ldrb	r2, [r7, #14]
 8000370:	2101      	movs	r1, #1
 8000372:	fa01 f202 	lsl.w	r2, r1, r2
 8000376:	4611      	mov	r1, r2
 8000378:	4a3e      	ldr	r2, [pc, #248]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 800037a:	430b      	orrs	r3, r1
 800037c:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_MODER,Local_u8Config_Bit2);
 800037e:	4b3d      	ldr	r3, [pc, #244]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	7b7a      	ldrb	r2, [r7, #13]
 8000384:	2101      	movs	r1, #1
 8000386:	fa01 f202 	lsl.w	r2, r1, r2
 800038a:	43d2      	mvns	r2, r2
 800038c:	4611      	mov	r1, r2
 800038e:	4a39      	ldr	r2, [pc, #228]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 8000390:	400b      	ands	r3, r1
 8000392:	6013      	str	r3, [r2, #0]
					break;
 8000394:	e001      	b.n	800039a <GPIO_u8SetPinDirection+0x1c6>
				}
				
				default: Local_u8ErrorState=2;
 8000396:	2302      	movs	r3, #2
 8000398:	73fb      	strb	r3, [r7, #15]
			}
			GPIO_u8SetOutputPinType(Copy_u8Port,Copy_u8Pin,DEFAULT_OUTPUT_TYPE);
 800039a:	79b9      	ldrb	r1, [r7, #6]
 800039c:	79fb      	ldrb	r3, [r7, #7]
 800039e:	2200      	movs	r2, #0
 80003a0:	4618      	mov	r0, r3
 80003a2:	f000 f97d 	bl	80006a0 <GPIO_u8SetOutputPinType>
 80003a6:	e056      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
		}
		else if (Copy_u8Direction==GPIO_u8_PIN_ALTERNATE_MODE)
 80003a8:	797b      	ldrb	r3, [r7, #5]
 80003aa:	2b0a      	cmp	r3, #10
 80003ac:	d14e      	bne.n	800044c <GPIO_u8SetPinDirection+0x278>
		{
			switch (Copy_u8Port)
 80003ae:	79fb      	ldrb	r3, [r7, #7]
 80003b0:	2b02      	cmp	r3, #2
 80003b2:	d032      	beq.n	800041a <GPIO_u8SetPinDirection+0x246>
 80003b4:	2b02      	cmp	r3, #2
 80003b6:	dc46      	bgt.n	8000446 <GPIO_u8SetPinDirection+0x272>
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d002      	beq.n	80003c2 <GPIO_u8SetPinDirection+0x1ee>
 80003bc:	2b01      	cmp	r3, #1
 80003be:	d016      	beq.n	80003ee <GPIO_u8SetPinDirection+0x21a>
 80003c0:	e041      	b.n	8000446 <GPIO_u8SetPinDirection+0x272>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_MODER,Local_u8Config_Bit2);
 80003c2:	4b2a      	ldr	r3, [pc, #168]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	7b7a      	ldrb	r2, [r7, #13]
 80003c8:	2101      	movs	r1, #1
 80003ca:	fa01 f202 	lsl.w	r2, r1, r2
 80003ce:	4611      	mov	r1, r2
 80003d0:	4a26      	ldr	r2, [pc, #152]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 80003d2:	430b      	orrs	r3, r1
 80003d4:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_MODER,Local_u8Config_Bit1);
 80003d6:	4b25      	ldr	r3, [pc, #148]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	7bba      	ldrb	r2, [r7, #14]
 80003dc:	2101      	movs	r1, #1
 80003de:	fa01 f202 	lsl.w	r2, r1, r2
 80003e2:	43d2      	mvns	r2, r2
 80003e4:	4611      	mov	r1, r2
 80003e6:	4a21      	ldr	r2, [pc, #132]	; (800046c <GPIO_u8SetPinDirection+0x298>)
 80003e8:	400b      	ands	r3, r1
 80003ea:	6013      	str	r3, [r2, #0]
					break;
 80003ec:	e033      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_MODER,Local_u8Config_Bit2);
 80003ee:	4b20      	ldr	r3, [pc, #128]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	7b7a      	ldrb	r2, [r7, #13]
 80003f4:	2101      	movs	r1, #1
 80003f6:	fa01 f202 	lsl.w	r2, r1, r2
 80003fa:	4611      	mov	r1, r2
 80003fc:	4a1c      	ldr	r2, [pc, #112]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 80003fe:	430b      	orrs	r3, r1
 8000400:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_MODER,Local_u8Config_Bit1);
 8000402:	4b1b      	ldr	r3, [pc, #108]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	7bba      	ldrb	r2, [r7, #14]
 8000408:	2101      	movs	r1, #1
 800040a:	fa01 f202 	lsl.w	r2, r1, r2
 800040e:	43d2      	mvns	r2, r2
 8000410:	4611      	mov	r1, r2
 8000412:	4a17      	ldr	r2, [pc, #92]	; (8000470 <GPIO_u8SetPinDirection+0x29c>)
 8000414:	400b      	ands	r3, r1
 8000416:	6013      	str	r3, [r2, #0]
					break;
 8000418:	e01d      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_MODER,Local_u8Config_Bit2);
 800041a:	4b16      	ldr	r3, [pc, #88]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	7b7a      	ldrb	r2, [r7, #13]
 8000420:	2101      	movs	r1, #1
 8000422:	fa01 f202 	lsl.w	r2, r1, r2
 8000426:	4611      	mov	r1, r2
 8000428:	4a12      	ldr	r2, [pc, #72]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 800042a:	430b      	orrs	r3, r1
 800042c:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_MODER,Local_u8Config_Bit1);
 800042e:	4b11      	ldr	r3, [pc, #68]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	7bba      	ldrb	r2, [r7, #14]
 8000434:	2101      	movs	r1, #1
 8000436:	fa01 f202 	lsl.w	r2, r1, r2
 800043a:	43d2      	mvns	r2, r2
 800043c:	4611      	mov	r1, r2
 800043e:	4a0d      	ldr	r2, [pc, #52]	; (8000474 <GPIO_u8SetPinDirection+0x2a0>)
 8000440:	400b      	ands	r3, r1
 8000442:	6013      	str	r3, [r2, #0]
					break;
 8000444:	e007      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
				}
				
				default: Local_u8ErrorState=2;
 8000446:	2302      	movs	r3, #2
 8000448:	73fb      	strb	r3, [r7, #15]
 800044a:	e004      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
				}
				
				default: Local_u8ErrorState=2;
			}
		}
		else 	Local_u8ErrorState=3;
 800044c:	2303      	movs	r3, #3
 800044e:	73fb      	strb	r3, [r7, #15]
 8000450:	e001      	b.n	8000456 <GPIO_u8SetPinDirection+0x282>
		
	}
	else Local_u8ErrorState=1 ;
 8000452:	2301      	movs	r3, #1
 8000454:	73fb      	strb	r3, [r7, #15]
	GPIO_u8SetPinSpeed(Copy_u8Port,Copy_u8Pin,DEFAULT_SPEED);
 8000456:	79b9      	ldrb	r1, [r7, #6]
 8000458:	79fb      	ldrb	r3, [r7, #7]
 800045a:	2202      	movs	r2, #2
 800045c:	4618      	mov	r0, r3
 800045e:	f000 fb07 	bl	8000a70 <GPIO_u8SetPinSpeed>
	return Local_u8ErrorState ;
 8000462:	7bfb      	ldrb	r3, [r7, #15]
}
 8000464:	4618      	mov	r0, r3
 8000466:	3710      	adds	r7, #16
 8000468:	46bd      	mov	sp, r7
 800046a:	bd80      	pop	{r7, pc}
 800046c:	40020000 	.word	0x40020000
 8000470:	40020400 	.word	0x40020400
 8000474:	40020800 	.word	0x40020800

08000478 <GPIO_u8SetPinValue>:
u8 GPIO_u8SetPinValue (u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)
{
 8000478:	b480      	push	{r7}
 800047a:	b085      	sub	sp, #20
 800047c:	af00      	add	r7, sp, #0
 800047e:	4603      	mov	r3, r0
 8000480:	71fb      	strb	r3, [r7, #7]
 8000482:	460b      	mov	r3, r1
 8000484:	71bb      	strb	r3, [r7, #6]
 8000486:	4613      	mov	r3, r2
 8000488:	717b      	strb	r3, [r7, #5]
	u8 Local_u8ErrorState= 0 ;
 800048a:	2300      	movs	r3, #0
 800048c:	73fb      	strb	r3, [r7, #15]
	if (Copy_u8Pin<=GPIO_u8_PIN15 ){
 800048e:	79bb      	ldrb	r3, [r7, #6]
 8000490:	2b0f      	cmp	r3, #15
 8000492:	f200 8085 	bhi.w	80005a0 <GPIO_u8SetPinValue+0x128>
		if(((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN13))||((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN14)))
 8000496:	79fb      	ldrb	r3, [r7, #7]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d102      	bne.n	80004a2 <GPIO_u8SetPinValue+0x2a>
 800049c:	79bb      	ldrb	r3, [r7, #6]
 800049e:	2b0d      	cmp	r3, #13
 80004a0:	d005      	beq.n	80004ae <GPIO_u8SetPinValue+0x36>
 80004a2:	79fb      	ldrb	r3, [r7, #7]
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	d106      	bne.n	80004b6 <GPIO_u8SetPinValue+0x3e>
 80004a8:	79bb      	ldrb	r3, [r7, #6]
 80004aa:	2b0e      	cmp	r3, #14
 80004ac:	d103      	bne.n	80004b6 <GPIO_u8SetPinValue+0x3e>
		{
			Local_u8ErrorState=4;
 80004ae:	2304      	movs	r3, #4
 80004b0:	73fb      	strb	r3, [r7, #15]
			return Local_u8ErrorState;
 80004b2:	7bfb      	ldrb	r3, [r7, #15]
 80004b4:	e079      	b.n	80005aa <GPIO_u8SetPinValue+0x132>
		}
		if(((Copy_u8Port ==GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN3))||((Copy_u8Port == GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN4)))
 80004b6:	79fb      	ldrb	r3, [r7, #7]
 80004b8:	2b01      	cmp	r3, #1
 80004ba:	d102      	bne.n	80004c2 <GPIO_u8SetPinValue+0x4a>
 80004bc:	79bb      	ldrb	r3, [r7, #6]
 80004be:	2b03      	cmp	r3, #3
 80004c0:	d005      	beq.n	80004ce <GPIO_u8SetPinValue+0x56>
 80004c2:	79fb      	ldrb	r3, [r7, #7]
 80004c4:	2b01      	cmp	r3, #1
 80004c6:	d106      	bne.n	80004d6 <GPIO_u8SetPinValue+0x5e>
 80004c8:	79bb      	ldrb	r3, [r7, #6]
 80004ca:	2b04      	cmp	r3, #4
 80004cc:	d103      	bne.n	80004d6 <GPIO_u8SetPinValue+0x5e>
		{
			Local_u8ErrorState=4;
 80004ce:	2304      	movs	r3, #4
 80004d0:	73fb      	strb	r3, [r7, #15]
			return Local_u8ErrorState;
 80004d2:	7bfb      	ldrb	r3, [r7, #15]
 80004d4:	e069      	b.n	80005aa <GPIO_u8SetPinValue+0x132>
		}
		else
		{
			if(Copy_u8Value == GPIO_u8_PIN_HIGH)
 80004d6:	797b      	ldrb	r3, [r7, #5]
 80004d8:	2b01      	cmp	r3, #1
 80004da:	d12d      	bne.n	8000538 <GPIO_u8SetPinValue+0xc0>
			{
				switch(Copy_u8Port)
 80004dc:	79fb      	ldrb	r3, [r7, #7]
 80004de:	2b02      	cmp	r3, #2
 80004e0:	d01c      	beq.n	800051c <GPIO_u8SetPinValue+0xa4>
 80004e2:	2b02      	cmp	r3, #2
 80004e4:	dc25      	bgt.n	8000532 <GPIO_u8SetPinValue+0xba>
 80004e6:	2b00      	cmp	r3, #0
 80004e8:	d002      	beq.n	80004f0 <GPIO_u8SetPinValue+0x78>
 80004ea:	2b01      	cmp	r3, #1
 80004ec:	d00b      	beq.n	8000506 <GPIO_u8SetPinValue+0x8e>
 80004ee:	e020      	b.n	8000532 <GPIO_u8SetPinValue+0xba>
				{
					case GPIO_u8_PORTA	:	SET_BIT(GPIOA_ODR,Copy_u8Pin);	break;
 80004f0:	4b31      	ldr	r3, [pc, #196]	; (80005b8 <GPIO_u8SetPinValue+0x140>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	79ba      	ldrb	r2, [r7, #6]
 80004f6:	2101      	movs	r1, #1
 80004f8:	fa01 f202 	lsl.w	r2, r1, r2
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a2e      	ldr	r2, [pc, #184]	; (80005b8 <GPIO_u8SetPinValue+0x140>)
 8000500:	430b      	orrs	r3, r1
 8000502:	6013      	str	r3, [r2, #0]
 8000504:	e050      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
					case GPIO_u8_PORTB	:	SET_BIT(GPIOB_ODR,Copy_u8Pin);	break;
 8000506:	4b2d      	ldr	r3, [pc, #180]	; (80005bc <GPIO_u8SetPinValue+0x144>)
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	79ba      	ldrb	r2, [r7, #6]
 800050c:	2101      	movs	r1, #1
 800050e:	fa01 f202 	lsl.w	r2, r1, r2
 8000512:	4611      	mov	r1, r2
 8000514:	4a29      	ldr	r2, [pc, #164]	; (80005bc <GPIO_u8SetPinValue+0x144>)
 8000516:	430b      	orrs	r3, r1
 8000518:	6013      	str	r3, [r2, #0]
 800051a:	e045      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
					case GPIO_u8_PORTC	:	SET_BIT(GPIOC_ODR,Copy_u8Pin);	break;
 800051c:	4b28      	ldr	r3, [pc, #160]	; (80005c0 <GPIO_u8SetPinValue+0x148>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	79ba      	ldrb	r2, [r7, #6]
 8000522:	2101      	movs	r1, #1
 8000524:	fa01 f202 	lsl.w	r2, r1, r2
 8000528:	4611      	mov	r1, r2
 800052a:	4a25      	ldr	r2, [pc, #148]	; (80005c0 <GPIO_u8SetPinValue+0x148>)
 800052c:	430b      	orrs	r3, r1
 800052e:	6013      	str	r3, [r2, #0]
 8000530:	e03a      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
					default : Local_u8ErrorState=2 ;						break;
 8000532:	2302      	movs	r3, #2
 8000534:	73fb      	strb	r3, [r7, #15]
 8000536:	e037      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
				}
			}
			else if(Copy_u8Value == GPIO_u8_PIN_LOW)
 8000538:	797b      	ldrb	r3, [r7, #5]
 800053a:	2b00      	cmp	r3, #0
 800053c:	d133      	bne.n	80005a6 <GPIO_u8SetPinValue+0x12e>
			{
				switch(Copy_u8Port)
 800053e:	79fb      	ldrb	r3, [r7, #7]
 8000540:	2b02      	cmp	r3, #2
 8000542:	d01e      	beq.n	8000582 <GPIO_u8SetPinValue+0x10a>
 8000544:	2b02      	cmp	r3, #2
 8000546:	dc28      	bgt.n	800059a <GPIO_u8SetPinValue+0x122>
 8000548:	2b00      	cmp	r3, #0
 800054a:	d002      	beq.n	8000552 <GPIO_u8SetPinValue+0xda>
 800054c:	2b01      	cmp	r3, #1
 800054e:	d00c      	beq.n	800056a <GPIO_u8SetPinValue+0xf2>
 8000550:	e023      	b.n	800059a <GPIO_u8SetPinValue+0x122>
				{
					case GPIO_u8_PORTA	:	CLR_BIT(GPIOA_ODR,Copy_u8Pin);	break;
 8000552:	4b19      	ldr	r3, [pc, #100]	; (80005b8 <GPIO_u8SetPinValue+0x140>)
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	79ba      	ldrb	r2, [r7, #6]
 8000558:	2101      	movs	r1, #1
 800055a:	fa01 f202 	lsl.w	r2, r1, r2
 800055e:	43d2      	mvns	r2, r2
 8000560:	4611      	mov	r1, r2
 8000562:	4a15      	ldr	r2, [pc, #84]	; (80005b8 <GPIO_u8SetPinValue+0x140>)
 8000564:	400b      	ands	r3, r1
 8000566:	6013      	str	r3, [r2, #0]
 8000568:	e01e      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
					case GPIO_u8_PORTB	:	CLR_BIT(GPIOB_ODR,Copy_u8Pin);	break;
 800056a:	4b14      	ldr	r3, [pc, #80]	; (80005bc <GPIO_u8SetPinValue+0x144>)
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	79ba      	ldrb	r2, [r7, #6]
 8000570:	2101      	movs	r1, #1
 8000572:	fa01 f202 	lsl.w	r2, r1, r2
 8000576:	43d2      	mvns	r2, r2
 8000578:	4611      	mov	r1, r2
 800057a:	4a10      	ldr	r2, [pc, #64]	; (80005bc <GPIO_u8SetPinValue+0x144>)
 800057c:	400b      	ands	r3, r1
 800057e:	6013      	str	r3, [r2, #0]
 8000580:	e012      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
					case GPIO_u8_PORTC:		CLR_BIT(GPIOC_ODR,Copy_u8Pin);	break;
 8000582:	4b0f      	ldr	r3, [pc, #60]	; (80005c0 <GPIO_u8SetPinValue+0x148>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	79ba      	ldrb	r2, [r7, #6]
 8000588:	2101      	movs	r1, #1
 800058a:	fa01 f202 	lsl.w	r2, r1, r2
 800058e:	43d2      	mvns	r2, r2
 8000590:	4611      	mov	r1, r2
 8000592:	4a0b      	ldr	r2, [pc, #44]	; (80005c0 <GPIO_u8SetPinValue+0x148>)
 8000594:	400b      	ands	r3, r1
 8000596:	6013      	str	r3, [r2, #0]
 8000598:	e006      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
					default : Local_u8ErrorState=2 ;				break;
 800059a:	2302      	movs	r3, #2
 800059c:	73fb      	strb	r3, [r7, #15]
 800059e:	e003      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
				}
			}
		}
	}
	else Local_u8ErrorState=1;
 80005a0:	2301      	movs	r3, #1
 80005a2:	73fb      	strb	r3, [r7, #15]
 80005a4:	e000      	b.n	80005a8 <GPIO_u8SetPinValue+0x130>
			}
 80005a6:	bf00      	nop
	return Local_u8ErrorState ;
 80005a8:	7bfb      	ldrb	r3, [r7, #15]
	
}
 80005aa:	4618      	mov	r0, r3
 80005ac:	3714      	adds	r7, #20
 80005ae:	46bd      	mov	sp, r7
 80005b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b4:	4770      	bx	lr
 80005b6:	bf00      	nop
 80005b8:	40020014 	.word	0x40020014
 80005bc:	40020414 	.word	0x40020414
 80005c0:	40020814 	.word	0x40020814

080005c4 <GPIO_u8GetPinValue>:
u8 GPIO_u8GetPinValue (u8 Copy_u8Port , u8 Copy_u8Pin , u8 * Copy_pu8Value)
{
 80005c4:	b480      	push	{r7}
 80005c6:	b085      	sub	sp, #20
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	4603      	mov	r3, r0
 80005cc:	603a      	str	r2, [r7, #0]
 80005ce:	71fb      	strb	r3, [r7, #7]
 80005d0:	460b      	mov	r3, r1
 80005d2:	71bb      	strb	r3, [r7, #6]
	
	u8 Local_u8ErrorState= 0 ;
 80005d4:	2300      	movs	r3, #0
 80005d6:	73fb      	strb	r3, [r7, #15]
	if (Copy_u8Pin<=GPIO_u8_PIN15 ){
 80005d8:	79bb      	ldrb	r3, [r7, #6]
 80005da:	2b0f      	cmp	r3, #15
 80005dc:	d850      	bhi.n	8000680 <GPIO_u8GetPinValue+0xbc>
		if(((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN13))||((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN14)))
 80005de:	79fb      	ldrb	r3, [r7, #7]
 80005e0:	2b00      	cmp	r3, #0
 80005e2:	d102      	bne.n	80005ea <GPIO_u8GetPinValue+0x26>
 80005e4:	79bb      	ldrb	r3, [r7, #6]
 80005e6:	2b0d      	cmp	r3, #13
 80005e8:	d005      	beq.n	80005f6 <GPIO_u8GetPinValue+0x32>
 80005ea:	79fb      	ldrb	r3, [r7, #7]
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	d106      	bne.n	80005fe <GPIO_u8GetPinValue+0x3a>
 80005f0:	79bb      	ldrb	r3, [r7, #6]
 80005f2:	2b0e      	cmp	r3, #14
 80005f4:	d103      	bne.n	80005fe <GPIO_u8GetPinValue+0x3a>
		{
			Local_u8ErrorState=4;
 80005f6:	2304      	movs	r3, #4
 80005f8:	73fb      	strb	r3, [r7, #15]
			return Local_u8ErrorState;
 80005fa:	7bfb      	ldrb	r3, [r7, #15]
 80005fc:	e043      	b.n	8000686 <GPIO_u8GetPinValue+0xc2>
		}
		if(((Copy_u8Port ==GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN3))||((Copy_u8Port == GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN4)))
 80005fe:	79fb      	ldrb	r3, [r7, #7]
 8000600:	2b01      	cmp	r3, #1
 8000602:	d102      	bne.n	800060a <GPIO_u8GetPinValue+0x46>
 8000604:	79bb      	ldrb	r3, [r7, #6]
 8000606:	2b03      	cmp	r3, #3
 8000608:	d005      	beq.n	8000616 <GPIO_u8GetPinValue+0x52>
 800060a:	79fb      	ldrb	r3, [r7, #7]
 800060c:	2b01      	cmp	r3, #1
 800060e:	d106      	bne.n	800061e <GPIO_u8GetPinValue+0x5a>
 8000610:	79bb      	ldrb	r3, [r7, #6]
 8000612:	2b04      	cmp	r3, #4
 8000614:	d103      	bne.n	800061e <GPIO_u8GetPinValue+0x5a>
		{
			Local_u8ErrorState=4;
 8000616:	2304      	movs	r3, #4
 8000618:	73fb      	strb	r3, [r7, #15]
			return Local_u8ErrorState;
 800061a:	7bfb      	ldrb	r3, [r7, #15]
 800061c:	e033      	b.n	8000686 <GPIO_u8GetPinValue+0xc2>
		}
		else
		{
			
			
			switch(Copy_u8Port)
 800061e:	79fb      	ldrb	r3, [r7, #7]
 8000620:	2b02      	cmp	r3, #2
 8000622:	d01e      	beq.n	8000662 <GPIO_u8GetPinValue+0x9e>
 8000624:	2b02      	cmp	r3, #2
 8000626:	dc28      	bgt.n	800067a <GPIO_u8GetPinValue+0xb6>
 8000628:	2b00      	cmp	r3, #0
 800062a:	d002      	beq.n	8000632 <GPIO_u8GetPinValue+0x6e>
 800062c:	2b01      	cmp	r3, #1
 800062e:	d00c      	beq.n	800064a <GPIO_u8GetPinValue+0x86>
 8000630:	e023      	b.n	800067a <GPIO_u8GetPinValue+0xb6>
			{
				case GPIO_u8_PORTA	: *Copy_pu8Value=	GET_BIT(GPIOA_IDR,Copy_u8Pin);	break;
 8000632:	4b18      	ldr	r3, [pc, #96]	; (8000694 <GPIO_u8GetPinValue+0xd0>)
 8000634:	681a      	ldr	r2, [r3, #0]
 8000636:	79bb      	ldrb	r3, [r7, #6]
 8000638:	fa22 f303 	lsr.w	r3, r2, r3
 800063c:	b2db      	uxtb	r3, r3
 800063e:	f003 0301 	and.w	r3, r3, #1
 8000642:	b2da      	uxtb	r2, r3
 8000644:	683b      	ldr	r3, [r7, #0]
 8000646:	701a      	strb	r2, [r3, #0]
 8000648:	e01c      	b.n	8000684 <GPIO_u8GetPinValue+0xc0>
				case GPIO_u8_PORTB	: *Copy_pu8Value=	GET_BIT(GPIOB_IDR,Copy_u8Pin);	break;
 800064a:	4b13      	ldr	r3, [pc, #76]	; (8000698 <GPIO_u8GetPinValue+0xd4>)
 800064c:	681a      	ldr	r2, [r3, #0]
 800064e:	79bb      	ldrb	r3, [r7, #6]
 8000650:	fa22 f303 	lsr.w	r3, r2, r3
 8000654:	b2db      	uxtb	r3, r3
 8000656:	f003 0301 	and.w	r3, r3, #1
 800065a:	b2da      	uxtb	r2, r3
 800065c:	683b      	ldr	r3, [r7, #0]
 800065e:	701a      	strb	r2, [r3, #0]
 8000660:	e010      	b.n	8000684 <GPIO_u8GetPinValue+0xc0>
				case GPIO_u8_PORTC	: *Copy_pu8Value=	GET_BIT(GPIOC_IDR,Copy_u8Pin);	break;
 8000662:	4b0e      	ldr	r3, [pc, #56]	; (800069c <GPIO_u8GetPinValue+0xd8>)
 8000664:	681a      	ldr	r2, [r3, #0]
 8000666:	79bb      	ldrb	r3, [r7, #6]
 8000668:	fa22 f303 	lsr.w	r3, r2, r3
 800066c:	b2db      	uxtb	r3, r3
 800066e:	f003 0301 	and.w	r3, r3, #1
 8000672:	b2da      	uxtb	r2, r3
 8000674:	683b      	ldr	r3, [r7, #0]
 8000676:	701a      	strb	r2, [r3, #0]
 8000678:	e004      	b.n	8000684 <GPIO_u8GetPinValue+0xc0>
				default : Local_u8ErrorState=2 ;				break;
 800067a:	2302      	movs	r3, #2
 800067c:	73fb      	strb	r3, [r7, #15]
 800067e:	e001      	b.n	8000684 <GPIO_u8GetPinValue+0xc0>
			}
		}
		
	}
	else Local_u8ErrorState=1;
 8000680:	2301      	movs	r3, #1
 8000682:	73fb      	strb	r3, [r7, #15]
	return Local_u8ErrorState ;
 8000684:	7bfb      	ldrb	r3, [r7, #15]
}
 8000686:	4618      	mov	r0, r3
 8000688:	3714      	adds	r7, #20
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
 8000692:	bf00      	nop
 8000694:	40020010 	.word	0x40020010
 8000698:	40020410 	.word	0x40020410
 800069c:	40020810 	.word	0x40020810

080006a0 <GPIO_u8SetOutputPinType>:
	}
	return Local_u8ErrorState;;
}

u8 GPIO_u8SetOutputPinType (u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Type)
{
 80006a0:	b480      	push	{r7}
 80006a2:	b085      	sub	sp, #20
 80006a4:	af00      	add	r7, sp, #0
 80006a6:	4603      	mov	r3, r0
 80006a8:	71fb      	strb	r3, [r7, #7]
 80006aa:	460b      	mov	r3, r1
 80006ac:	71bb      	strb	r3, [r7, #6]
 80006ae:	4613      	mov	r3, r2
 80006b0:	717b      	strb	r3, [r7, #5]
	u8 Local_u8ErrorState= 0 ;
 80006b2:	2300      	movs	r3, #0
 80006b4:	73fb      	strb	r3, [r7, #15]
	// THE BITS THAT WILL BE ACCESSED TO SET THE DIRECTION IN THE MODE REGISTER TO SET A CERTIAN PIN
	
	if(((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN13))||((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN14)))
 80006b6:	79fb      	ldrb	r3, [r7, #7]
 80006b8:	2b00      	cmp	r3, #0
 80006ba:	d102      	bne.n	80006c2 <GPIO_u8SetOutputPinType+0x22>
 80006bc:	79bb      	ldrb	r3, [r7, #6]
 80006be:	2b0d      	cmp	r3, #13
 80006c0:	d005      	beq.n	80006ce <GPIO_u8SetOutputPinType+0x2e>
 80006c2:	79fb      	ldrb	r3, [r7, #7]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d106      	bne.n	80006d6 <GPIO_u8SetOutputPinType+0x36>
 80006c8:	79bb      	ldrb	r3, [r7, #6]
 80006ca:	2b0e      	cmp	r3, #14
 80006cc:	d103      	bne.n	80006d6 <GPIO_u8SetOutputPinType+0x36>
	{
		Local_u8ErrorState=4;
 80006ce:	2304      	movs	r3, #4
 80006d0:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 80006d2:	7bfb      	ldrb	r3, [r7, #15]
 80006d4:	e07d      	b.n	80007d2 <GPIO_u8SetOutputPinType+0x132>
	}
	if(((Copy_u8Port ==GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN3))||((Copy_u8Port == GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN4)))
 80006d6:	79fb      	ldrb	r3, [r7, #7]
 80006d8:	2b01      	cmp	r3, #1
 80006da:	d102      	bne.n	80006e2 <GPIO_u8SetOutputPinType+0x42>
 80006dc:	79bb      	ldrb	r3, [r7, #6]
 80006de:	2b03      	cmp	r3, #3
 80006e0:	d005      	beq.n	80006ee <GPIO_u8SetOutputPinType+0x4e>
 80006e2:	79fb      	ldrb	r3, [r7, #7]
 80006e4:	2b01      	cmp	r3, #1
 80006e6:	d106      	bne.n	80006f6 <GPIO_u8SetOutputPinType+0x56>
 80006e8:	79bb      	ldrb	r3, [r7, #6]
 80006ea:	2b04      	cmp	r3, #4
 80006ec:	d103      	bne.n	80006f6 <GPIO_u8SetOutputPinType+0x56>
	{
		Local_u8ErrorState=4;
 80006ee:	2304      	movs	r3, #4
 80006f0:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 80006f2:	7bfb      	ldrb	r3, [r7, #15]
 80006f4:	e06d      	b.n	80007d2 <GPIO_u8SetOutputPinType+0x132>
	}
	if(Copy_u8Pin<=GPIO_u8_PIN15)
 80006f6:	79bb      	ldrb	r3, [r7, #6]
 80006f8:	2b0f      	cmp	r3, #15
 80006fa:	d867      	bhi.n	80007cc <GPIO_u8SetOutputPinType+0x12c>
	{
		if(Copy_u8Type==GPIO_PIN_PUSH_PULL)
 80006fc:	797b      	ldrb	r3, [r7, #5]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d130      	bne.n	8000764 <GPIO_u8SetOutputPinType+0xc4>
		{
			switch (Copy_u8Port)
 8000702:	79fb      	ldrb	r3, [r7, #7]
 8000704:	2b02      	cmp	r3, #2
 8000706:	d01e      	beq.n	8000746 <GPIO_u8SetOutputPinType+0xa6>
 8000708:	2b02      	cmp	r3, #2
 800070a:	dc28      	bgt.n	800075e <GPIO_u8SetOutputPinType+0xbe>
 800070c:	2b00      	cmp	r3, #0
 800070e:	d002      	beq.n	8000716 <GPIO_u8SetOutputPinType+0x76>
 8000710:	2b01      	cmp	r3, #1
 8000712:	d00c      	beq.n	800072e <GPIO_u8SetOutputPinType+0x8e>
 8000714:	e023      	b.n	800075e <GPIO_u8SetOutputPinType+0xbe>
			{
				case GPIO_u8_PORTA  :
				{
					
					CLR_BIT(GPIOA_OTYPER,Copy_u8Pin);
 8000716:	4b32      	ldr	r3, [pc, #200]	; (80007e0 <GPIO_u8SetOutputPinType+0x140>)
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	79ba      	ldrb	r2, [r7, #6]
 800071c:	2101      	movs	r1, #1
 800071e:	fa01 f202 	lsl.w	r2, r1, r2
 8000722:	43d2      	mvns	r2, r2
 8000724:	4611      	mov	r1, r2
 8000726:	4a2e      	ldr	r2, [pc, #184]	; (80007e0 <GPIO_u8SetOutputPinType+0x140>)
 8000728:	400b      	ands	r3, r1
 800072a:	6013      	str	r3, [r2, #0]
					
					
					
					break;
 800072c:	e050      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
				}
				case GPIO_u8_PORTB  :
				{
					CLR_BIT(GPIOB_OTYPER,Copy_u8Pin);
 800072e:	4b2d      	ldr	r3, [pc, #180]	; (80007e4 <GPIO_u8SetOutputPinType+0x144>)
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	79ba      	ldrb	r2, [r7, #6]
 8000734:	2101      	movs	r1, #1
 8000736:	fa01 f202 	lsl.w	r2, r1, r2
 800073a:	43d2      	mvns	r2, r2
 800073c:	4611      	mov	r1, r2
 800073e:	4a29      	ldr	r2, [pc, #164]	; (80007e4 <GPIO_u8SetOutputPinType+0x144>)
 8000740:	400b      	ands	r3, r1
 8000742:	6013      	str	r3, [r2, #0]
					
					break;
 8000744:	e044      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
				}
				case GPIO_u8_PORTC :
				{
					CLR_BIT(GPIOC_OTYPER,Copy_u8Pin);
 8000746:	4b28      	ldr	r3, [pc, #160]	; (80007e8 <GPIO_u8SetOutputPinType+0x148>)
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	79ba      	ldrb	r2, [r7, #6]
 800074c:	2101      	movs	r1, #1
 800074e:	fa01 f202 	lsl.w	r2, r1, r2
 8000752:	43d2      	mvns	r2, r2
 8000754:	4611      	mov	r1, r2
 8000756:	4a24      	ldr	r2, [pc, #144]	; (80007e8 <GPIO_u8SetOutputPinType+0x148>)
 8000758:	400b      	ands	r3, r1
 800075a:	6013      	str	r3, [r2, #0]
					
					break;
 800075c:	e038      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
				}
				
				default: Local_u8ErrorState=2;
 800075e:	2302      	movs	r3, #2
 8000760:	73fb      	strb	r3, [r7, #15]
 8000762:	e035      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
			}
			
		}
		else if (Copy_u8Type==GPIO_PIN_OPEN_DRAIN)
 8000764:	797b      	ldrb	r3, [r7, #5]
 8000766:	2b01      	cmp	r3, #1
 8000768:	d12d      	bne.n	80007c6 <GPIO_u8SetOutputPinType+0x126>
		{
			switch (Copy_u8Port)
 800076a:	79fb      	ldrb	r3, [r7, #7]
 800076c:	2b02      	cmp	r3, #2
 800076e:	d01c      	beq.n	80007aa <GPIO_u8SetOutputPinType+0x10a>
 8000770:	2b02      	cmp	r3, #2
 8000772:	dc25      	bgt.n	80007c0 <GPIO_u8SetOutputPinType+0x120>
 8000774:	2b00      	cmp	r3, #0
 8000776:	d002      	beq.n	800077e <GPIO_u8SetOutputPinType+0xde>
 8000778:	2b01      	cmp	r3, #1
 800077a:	d00b      	beq.n	8000794 <GPIO_u8SetOutputPinType+0xf4>
 800077c:	e020      	b.n	80007c0 <GPIO_u8SetOutputPinType+0x120>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_OTYPER,Copy_u8Pin);
 800077e:	4b18      	ldr	r3, [pc, #96]	; (80007e0 <GPIO_u8SetOutputPinType+0x140>)
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	79ba      	ldrb	r2, [r7, #6]
 8000784:	2101      	movs	r1, #1
 8000786:	fa01 f202 	lsl.w	r2, r1, r2
 800078a:	4611      	mov	r1, r2
 800078c:	4a14      	ldr	r2, [pc, #80]	; (80007e0 <GPIO_u8SetOutputPinType+0x140>)
 800078e:	430b      	orrs	r3, r1
 8000790:	6013      	str	r3, [r2, #0]
					
					break;
 8000792:	e01d      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_OTYPER,Copy_u8Pin);
 8000794:	4b13      	ldr	r3, [pc, #76]	; (80007e4 <GPIO_u8SetOutputPinType+0x144>)
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	79ba      	ldrb	r2, [r7, #6]
 800079a:	2101      	movs	r1, #1
 800079c:	fa01 f202 	lsl.w	r2, r1, r2
 80007a0:	4611      	mov	r1, r2
 80007a2:	4a10      	ldr	r2, [pc, #64]	; (80007e4 <GPIO_u8SetOutputPinType+0x144>)
 80007a4:	430b      	orrs	r3, r1
 80007a6:	6013      	str	r3, [r2, #0]
					
					break;
 80007a8:	e012      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_OTYPER,Copy_u8Pin);
 80007aa:	4b0f      	ldr	r3, [pc, #60]	; (80007e8 <GPIO_u8SetOutputPinType+0x148>)
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	79ba      	ldrb	r2, [r7, #6]
 80007b0:	2101      	movs	r1, #1
 80007b2:	fa01 f202 	lsl.w	r2, r1, r2
 80007b6:	4611      	mov	r1, r2
 80007b8:	4a0b      	ldr	r2, [pc, #44]	; (80007e8 <GPIO_u8SetOutputPinType+0x148>)
 80007ba:	430b      	orrs	r3, r1
 80007bc:	6013      	str	r3, [r2, #0]
					
					break;
 80007be:	e007      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
				}
				
				default: Local_u8ErrorState=2;
 80007c0:	2302      	movs	r3, #2
 80007c2:	73fb      	strb	r3, [r7, #15]
 80007c4:	e004      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
			}
			
		}
		
		
		else 	Local_u8ErrorState=3;
 80007c6:	2303      	movs	r3, #3
 80007c8:	73fb      	strb	r3, [r7, #15]
 80007ca:	e001      	b.n	80007d0 <GPIO_u8SetOutputPinType+0x130>
		
	}
	else Local_u8ErrorState=1 ;
 80007cc:	2301      	movs	r3, #1
 80007ce:	73fb      	strb	r3, [r7, #15]
	
	return Local_u8ErrorState ;
 80007d0:	7bfb      	ldrb	r3, [r7, #15]
}
 80007d2:	4618      	mov	r0, r3
 80007d4:	3714      	adds	r7, #20
 80007d6:	46bd      	mov	sp, r7
 80007d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007dc:	4770      	bx	lr
 80007de:	bf00      	nop
 80007e0:	40020004 	.word	0x40020004
 80007e4:	40020404 	.word	0x40020404
 80007e8:	40020804 	.word	0x40020804

080007ec <GPIO_u8SetIntputPinType>:
u8 GPIO_u8SetIntputPinType (u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Type)
{
 80007ec:	b480      	push	{r7}
 80007ee:	b085      	sub	sp, #20
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	4603      	mov	r3, r0
 80007f4:	71fb      	strb	r3, [r7, #7]
 80007f6:	460b      	mov	r3, r1
 80007f8:	71bb      	strb	r3, [r7, #6]
 80007fa:	4613      	mov	r3, r2
 80007fc:	717b      	strb	r3, [r7, #5]
	u8 Local_u8ErrorState= 0 ;
 80007fe:	2300      	movs	r3, #0
 8000800:	73fb      	strb	r3, [r7, #15]
	// THE BITS THAT WILL BE ACCESSED TO SET THE DIRECTION IN THE MODE REGISTER TO SET A CERTIAN PIN
	u8 Local_u8Config_Bit1=Copy_u8Pin*2;
 8000802:	79bb      	ldrb	r3, [r7, #6]
 8000804:	005b      	lsls	r3, r3, #1
 8000806:	73bb      	strb	r3, [r7, #14]
	u8 Local_u8Config_Bit2=(Copy_u8Pin*2)+1;
 8000808:	79bb      	ldrb	r3, [r7, #6]
 800080a:	005b      	lsls	r3, r3, #1
 800080c:	b2db      	uxtb	r3, r3
 800080e:	3301      	adds	r3, #1
 8000810:	737b      	strb	r3, [r7, #13]
	if(((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN13))||((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN14)))
 8000812:	79fb      	ldrb	r3, [r7, #7]
 8000814:	2b00      	cmp	r3, #0
 8000816:	d102      	bne.n	800081e <GPIO_u8SetIntputPinType+0x32>
 8000818:	79bb      	ldrb	r3, [r7, #6]
 800081a:	2b0d      	cmp	r3, #13
 800081c:	d005      	beq.n	800082a <GPIO_u8SetIntputPinType+0x3e>
 800081e:	79fb      	ldrb	r3, [r7, #7]
 8000820:	2b00      	cmp	r3, #0
 8000822:	d106      	bne.n	8000832 <GPIO_u8SetIntputPinType+0x46>
 8000824:	79bb      	ldrb	r3, [r7, #6]
 8000826:	2b0e      	cmp	r3, #14
 8000828:	d103      	bne.n	8000832 <GPIO_u8SetIntputPinType+0x46>
	{
		Local_u8ErrorState=4;
 800082a:	2304      	movs	r3, #4
 800082c:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 800082e:	7bfb      	ldrb	r3, [r7, #15]
 8000830:	e112      	b.n	8000a58 <GPIO_u8SetIntputPinType+0x26c>
	}
	if(((Copy_u8Port ==GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN3))||((Copy_u8Port == GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN4)))
 8000832:	79fb      	ldrb	r3, [r7, #7]
 8000834:	2b01      	cmp	r3, #1
 8000836:	d102      	bne.n	800083e <GPIO_u8SetIntputPinType+0x52>
 8000838:	79bb      	ldrb	r3, [r7, #6]
 800083a:	2b03      	cmp	r3, #3
 800083c:	d005      	beq.n	800084a <GPIO_u8SetIntputPinType+0x5e>
 800083e:	79fb      	ldrb	r3, [r7, #7]
 8000840:	2b01      	cmp	r3, #1
 8000842:	d106      	bne.n	8000852 <GPIO_u8SetIntputPinType+0x66>
 8000844:	79bb      	ldrb	r3, [r7, #6]
 8000846:	2b04      	cmp	r3, #4
 8000848:	d103      	bne.n	8000852 <GPIO_u8SetIntputPinType+0x66>
	{
		Local_u8ErrorState=4;
 800084a:	2304      	movs	r3, #4
 800084c:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 800084e:	7bfb      	ldrb	r3, [r7, #15]
 8000850:	e102      	b.n	8000a58 <GPIO_u8SetIntputPinType+0x26c>
	}
	if(Copy_u8Pin<=GPIO_u8_PIN15)
 8000852:	79bb      	ldrb	r3, [r7, #6]
 8000854:	2b0f      	cmp	r3, #15
 8000856:	f200 80fc 	bhi.w	8000a52 <GPIO_u8SetIntputPinType+0x266>
	{
		if(Copy_u8Type==GPIO_PIN_NO_PULL_UP_PULL_DOWN)
 800085a:	797b      	ldrb	r3, [r7, #5]
 800085c:	2b00      	cmp	r3, #0
 800085e:	d151      	bne.n	8000904 <GPIO_u8SetIntputPinType+0x118>
		{
			switch (Copy_u8Port)
 8000860:	79fb      	ldrb	r3, [r7, #7]
 8000862:	2b02      	cmp	r3, #2
 8000864:	d034      	beq.n	80008d0 <GPIO_u8SetIntputPinType+0xe4>
 8000866:	2b02      	cmp	r3, #2
 8000868:	dc49      	bgt.n	80008fe <GPIO_u8SetIntputPinType+0x112>
 800086a:	2b00      	cmp	r3, #0
 800086c:	d002      	beq.n	8000874 <GPIO_u8SetIntputPinType+0x88>
 800086e:	2b01      	cmp	r3, #1
 8000870:	d017      	beq.n	80008a2 <GPIO_u8SetIntputPinType+0xb6>
 8000872:	e044      	b.n	80008fe <GPIO_u8SetIntputPinType+0x112>
			{
				case GPIO_u8_PORTA  :
				{
					
					CLR_BIT(GPIOA_PUPDR,Local_u8Config_Bit1);
 8000874:	4b7b      	ldr	r3, [pc, #492]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 8000876:	681b      	ldr	r3, [r3, #0]
 8000878:	7bba      	ldrb	r2, [r7, #14]
 800087a:	2101      	movs	r1, #1
 800087c:	fa01 f202 	lsl.w	r2, r1, r2
 8000880:	43d2      	mvns	r2, r2
 8000882:	4611      	mov	r1, r2
 8000884:	4a77      	ldr	r2, [pc, #476]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 8000886:	400b      	ands	r3, r1
 8000888:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_PUPDR,Local_u8Config_Bit2);
 800088a:	4b76      	ldr	r3, [pc, #472]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	7b7a      	ldrb	r2, [r7, #13]
 8000890:	2101      	movs	r1, #1
 8000892:	fa01 f202 	lsl.w	r2, r1, r2
 8000896:	43d2      	mvns	r2, r2
 8000898:	4611      	mov	r1, r2
 800089a:	4a72      	ldr	r2, [pc, #456]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 800089c:	400b      	ands	r3, r1
 800089e:	6013      	str	r3, [r2, #0]
					
					
					break;
 80008a0:	e0d9      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				case GPIO_u8_PORTB  :
				{
					CLR_BIT(GPIOB_PUPDR,Local_u8Config_Bit1);
 80008a2:	4b71      	ldr	r3, [pc, #452]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 80008a4:	681b      	ldr	r3, [r3, #0]
 80008a6:	7bba      	ldrb	r2, [r7, #14]
 80008a8:	2101      	movs	r1, #1
 80008aa:	fa01 f202 	lsl.w	r2, r1, r2
 80008ae:	43d2      	mvns	r2, r2
 80008b0:	4611      	mov	r1, r2
 80008b2:	4a6d      	ldr	r2, [pc, #436]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 80008b4:	400b      	ands	r3, r1
 80008b6:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_PUPDR,Local_u8Config_Bit2);
 80008b8:	4b6b      	ldr	r3, [pc, #428]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	7b7a      	ldrb	r2, [r7, #13]
 80008be:	2101      	movs	r1, #1
 80008c0:	fa01 f202 	lsl.w	r2, r1, r2
 80008c4:	43d2      	mvns	r2, r2
 80008c6:	4611      	mov	r1, r2
 80008c8:	4a67      	ldr	r2, [pc, #412]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 80008ca:	400b      	ands	r3, r1
 80008cc:	6013      	str	r3, [r2, #0]
					break;
 80008ce:	e0c2      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				case GPIO_u8_PORTC :
				{
					CLR_BIT(GPIOC_PUPDR,Local_u8Config_Bit1);
 80008d0:	4b66      	ldr	r3, [pc, #408]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 80008d2:	681b      	ldr	r3, [r3, #0]
 80008d4:	7bba      	ldrb	r2, [r7, #14]
 80008d6:	2101      	movs	r1, #1
 80008d8:	fa01 f202 	lsl.w	r2, r1, r2
 80008dc:	43d2      	mvns	r2, r2
 80008de:	4611      	mov	r1, r2
 80008e0:	4a62      	ldr	r2, [pc, #392]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 80008e2:	400b      	ands	r3, r1
 80008e4:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_PUPDR,Local_u8Config_Bit2);
 80008e6:	4b61      	ldr	r3, [pc, #388]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 80008e8:	681b      	ldr	r3, [r3, #0]
 80008ea:	7b7a      	ldrb	r2, [r7, #13]
 80008ec:	2101      	movs	r1, #1
 80008ee:	fa01 f202 	lsl.w	r2, r1, r2
 80008f2:	43d2      	mvns	r2, r2
 80008f4:	4611      	mov	r1, r2
 80008f6:	4a5d      	ldr	r2, [pc, #372]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 80008f8:	400b      	ands	r3, r1
 80008fa:	6013      	str	r3, [r2, #0]
					break;
 80008fc:	e0ab      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				
				default: Local_u8ErrorState=2;
 80008fe:	2302      	movs	r3, #2
 8000900:	73fb      	strb	r3, [r7, #15]
 8000902:	e0a8      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
			}
			
		}
		else if (Copy_u8Type==GPIO_PIN_PULL_UP)
 8000904:	797b      	ldrb	r3, [r7, #5]
 8000906:	2b01      	cmp	r3, #1
 8000908:	d14e      	bne.n	80009a8 <GPIO_u8SetIntputPinType+0x1bc>
		{
			switch (Copy_u8Port)
 800090a:	79fb      	ldrb	r3, [r7, #7]
 800090c:	2b02      	cmp	r3, #2
 800090e:	d032      	beq.n	8000976 <GPIO_u8SetIntputPinType+0x18a>
 8000910:	2b02      	cmp	r3, #2
 8000912:	dc46      	bgt.n	80009a2 <GPIO_u8SetIntputPinType+0x1b6>
 8000914:	2b00      	cmp	r3, #0
 8000916:	d002      	beq.n	800091e <GPIO_u8SetIntputPinType+0x132>
 8000918:	2b01      	cmp	r3, #1
 800091a:	d016      	beq.n	800094a <GPIO_u8SetIntputPinType+0x15e>
 800091c:	e041      	b.n	80009a2 <GPIO_u8SetIntputPinType+0x1b6>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_PUPDR,Local_u8Config_Bit1);
 800091e:	4b51      	ldr	r3, [pc, #324]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	7bba      	ldrb	r2, [r7, #14]
 8000924:	2101      	movs	r1, #1
 8000926:	fa01 f202 	lsl.w	r2, r1, r2
 800092a:	4611      	mov	r1, r2
 800092c:	4a4d      	ldr	r2, [pc, #308]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 800092e:	430b      	orrs	r3, r1
 8000930:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_PUPDR,Local_u8Config_Bit2);
 8000932:	4b4c      	ldr	r3, [pc, #304]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	7b7a      	ldrb	r2, [r7, #13]
 8000938:	2101      	movs	r1, #1
 800093a:	fa01 f202 	lsl.w	r2, r1, r2
 800093e:	43d2      	mvns	r2, r2
 8000940:	4611      	mov	r1, r2
 8000942:	4a48      	ldr	r2, [pc, #288]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 8000944:	400b      	ands	r3, r1
 8000946:	6013      	str	r3, [r2, #0]
					break;
 8000948:	e085      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_PUPDR,Local_u8Config_Bit1);
 800094a:	4b47      	ldr	r3, [pc, #284]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	7bba      	ldrb	r2, [r7, #14]
 8000950:	2101      	movs	r1, #1
 8000952:	fa01 f202 	lsl.w	r2, r1, r2
 8000956:	4611      	mov	r1, r2
 8000958:	4a43      	ldr	r2, [pc, #268]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 800095a:	430b      	orrs	r3, r1
 800095c:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_PUPDR,Local_u8Config_Bit2);
 800095e:	4b42      	ldr	r3, [pc, #264]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	7b7a      	ldrb	r2, [r7, #13]
 8000964:	2101      	movs	r1, #1
 8000966:	fa01 f202 	lsl.w	r2, r1, r2
 800096a:	43d2      	mvns	r2, r2
 800096c:	4611      	mov	r1, r2
 800096e:	4a3e      	ldr	r2, [pc, #248]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 8000970:	400b      	ands	r3, r1
 8000972:	6013      	str	r3, [r2, #0]
					break;
 8000974:	e06f      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_PUPDR,Local_u8Config_Bit1);
 8000976:	4b3d      	ldr	r3, [pc, #244]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 8000978:	681b      	ldr	r3, [r3, #0]
 800097a:	7bba      	ldrb	r2, [r7, #14]
 800097c:	2101      	movs	r1, #1
 800097e:	fa01 f202 	lsl.w	r2, r1, r2
 8000982:	4611      	mov	r1, r2
 8000984:	4a39      	ldr	r2, [pc, #228]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 8000986:	430b      	orrs	r3, r1
 8000988:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_PUPDR,Local_u8Config_Bit2);
 800098a:	4b38      	ldr	r3, [pc, #224]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 800098c:	681b      	ldr	r3, [r3, #0]
 800098e:	7b7a      	ldrb	r2, [r7, #13]
 8000990:	2101      	movs	r1, #1
 8000992:	fa01 f202 	lsl.w	r2, r1, r2
 8000996:	43d2      	mvns	r2, r2
 8000998:	4611      	mov	r1, r2
 800099a:	4a34      	ldr	r2, [pc, #208]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 800099c:	400b      	ands	r3, r1
 800099e:	6013      	str	r3, [r2, #0]
					break;
 80009a0:	e059      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				
				default: Local_u8ErrorState=2;
 80009a2:	2302      	movs	r3, #2
 80009a4:	73fb      	strb	r3, [r7, #15]
 80009a6:	e056      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
			}
			
		}
		else if (Copy_u8Type==GPIO_PIN_PULL_DOWN)
 80009a8:	797b      	ldrb	r3, [r7, #5]
 80009aa:	2b0a      	cmp	r3, #10
 80009ac:	d14e      	bne.n	8000a4c <GPIO_u8SetIntputPinType+0x260>
		{
			switch (Copy_u8Port)
 80009ae:	79fb      	ldrb	r3, [r7, #7]
 80009b0:	2b02      	cmp	r3, #2
 80009b2:	d032      	beq.n	8000a1a <GPIO_u8SetIntputPinType+0x22e>
 80009b4:	2b02      	cmp	r3, #2
 80009b6:	dc46      	bgt.n	8000a46 <GPIO_u8SetIntputPinType+0x25a>
 80009b8:	2b00      	cmp	r3, #0
 80009ba:	d002      	beq.n	80009c2 <GPIO_u8SetIntputPinType+0x1d6>
 80009bc:	2b01      	cmp	r3, #1
 80009be:	d016      	beq.n	80009ee <GPIO_u8SetIntputPinType+0x202>
 80009c0:	e041      	b.n	8000a46 <GPIO_u8SetIntputPinType+0x25a>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_PUPDR,Local_u8Config_Bit2);
 80009c2:	4b28      	ldr	r3, [pc, #160]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 80009c4:	681b      	ldr	r3, [r3, #0]
 80009c6:	7b7a      	ldrb	r2, [r7, #13]
 80009c8:	2101      	movs	r1, #1
 80009ca:	fa01 f202 	lsl.w	r2, r1, r2
 80009ce:	4611      	mov	r1, r2
 80009d0:	4a24      	ldr	r2, [pc, #144]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 80009d2:	430b      	orrs	r3, r1
 80009d4:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_PUPDR,Local_u8Config_Bit1);
 80009d6:	4b23      	ldr	r3, [pc, #140]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 80009d8:	681b      	ldr	r3, [r3, #0]
 80009da:	7bba      	ldrb	r2, [r7, #14]
 80009dc:	2101      	movs	r1, #1
 80009de:	fa01 f202 	lsl.w	r2, r1, r2
 80009e2:	43d2      	mvns	r2, r2
 80009e4:	4611      	mov	r1, r2
 80009e6:	4a1f      	ldr	r2, [pc, #124]	; (8000a64 <GPIO_u8SetIntputPinType+0x278>)
 80009e8:	400b      	ands	r3, r1
 80009ea:	6013      	str	r3, [r2, #0]
					break;
 80009ec:	e033      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_PUPDR,Local_u8Config_Bit2);
 80009ee:	4b1e      	ldr	r3, [pc, #120]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	7b7a      	ldrb	r2, [r7, #13]
 80009f4:	2101      	movs	r1, #1
 80009f6:	fa01 f202 	lsl.w	r2, r1, r2
 80009fa:	4611      	mov	r1, r2
 80009fc:	4a1a      	ldr	r2, [pc, #104]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 80009fe:	430b      	orrs	r3, r1
 8000a00:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_PUPDR,Local_u8Config_Bit1);
 8000a02:	4b19      	ldr	r3, [pc, #100]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 8000a04:	681b      	ldr	r3, [r3, #0]
 8000a06:	7bba      	ldrb	r2, [r7, #14]
 8000a08:	2101      	movs	r1, #1
 8000a0a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a0e:	43d2      	mvns	r2, r2
 8000a10:	4611      	mov	r1, r2
 8000a12:	4a15      	ldr	r2, [pc, #84]	; (8000a68 <GPIO_u8SetIntputPinType+0x27c>)
 8000a14:	400b      	ands	r3, r1
 8000a16:	6013      	str	r3, [r2, #0]
					break;
 8000a18:	e01d      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_PUPDR,Local_u8Config_Bit2);
 8000a1a:	4b14      	ldr	r3, [pc, #80]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	7b7a      	ldrb	r2, [r7, #13]
 8000a20:	2101      	movs	r1, #1
 8000a22:	fa01 f202 	lsl.w	r2, r1, r2
 8000a26:	4611      	mov	r1, r2
 8000a28:	4a10      	ldr	r2, [pc, #64]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 8000a2a:	430b      	orrs	r3, r1
 8000a2c:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_PUPDR,Local_u8Config_Bit1);
 8000a2e:	4b0f      	ldr	r3, [pc, #60]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 8000a30:	681b      	ldr	r3, [r3, #0]
 8000a32:	7bba      	ldrb	r2, [r7, #14]
 8000a34:	2101      	movs	r1, #1
 8000a36:	fa01 f202 	lsl.w	r2, r1, r2
 8000a3a:	43d2      	mvns	r2, r2
 8000a3c:	4611      	mov	r1, r2
 8000a3e:	4a0b      	ldr	r2, [pc, #44]	; (8000a6c <GPIO_u8SetIntputPinType+0x280>)
 8000a40:	400b      	ands	r3, r1
 8000a42:	6013      	str	r3, [r2, #0]
					break;
 8000a44:	e007      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
				}
				
				default: Local_u8ErrorState=2;
 8000a46:	2302      	movs	r3, #2
 8000a48:	73fb      	strb	r3, [r7, #15]
 8000a4a:	e004      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
			}
		}
		
		else 	Local_u8ErrorState=3;
 8000a4c:	2303      	movs	r3, #3
 8000a4e:	73fb      	strb	r3, [r7, #15]
 8000a50:	e001      	b.n	8000a56 <GPIO_u8SetIntputPinType+0x26a>
		
	}
	else Local_u8ErrorState=1 ;
 8000a52:	2301      	movs	r3, #1
 8000a54:	73fb      	strb	r3, [r7, #15]
	
	return Local_u8ErrorState ;
 8000a56:	7bfb      	ldrb	r3, [r7, #15]
}
 8000a58:	4618      	mov	r0, r3
 8000a5a:	3714      	adds	r7, #20
 8000a5c:	46bd      	mov	sp, r7
 8000a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a62:	4770      	bx	lr
 8000a64:	4002000c 	.word	0x4002000c
 8000a68:	4002040c 	.word	0x4002040c
 8000a6c:	4002080c 	.word	0x4002080c

08000a70 <GPIO_u8SetPinSpeed>:
u8 GPIO_u8SetPinSpeed	   (u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Speed)
{
 8000a70:	b480      	push	{r7}
 8000a72:	b085      	sub	sp, #20
 8000a74:	af00      	add	r7, sp, #0
 8000a76:	4603      	mov	r3, r0
 8000a78:	71fb      	strb	r3, [r7, #7]
 8000a7a:	460b      	mov	r3, r1
 8000a7c:	71bb      	strb	r3, [r7, #6]
 8000a7e:	4613      	mov	r3, r2
 8000a80:	717b      	strb	r3, [r7, #5]
	u8 Local_u8ErrorState= 0 ;
 8000a82:	2300      	movs	r3, #0
 8000a84:	73fb      	strb	r3, [r7, #15]
	// THE BITS THAT WILL BE ACCESSED TO SET THE DIRECTION IN THE MODE REGISTER TO SET A CERTIAN PIN
	u8 Local_u8Config_Bit1=Copy_u8Pin*2;
 8000a86:	79bb      	ldrb	r3, [r7, #6]
 8000a88:	005b      	lsls	r3, r3, #1
 8000a8a:	73bb      	strb	r3, [r7, #14]
	u8 Local_u8Config_Bit2=(Copy_u8Pin*2)+1;
 8000a8c:	79bb      	ldrb	r3, [r7, #6]
 8000a8e:	005b      	lsls	r3, r3, #1
 8000a90:	b2db      	uxtb	r3, r3
 8000a92:	3301      	adds	r3, #1
 8000a94:	737b      	strb	r3, [r7, #13]
	if(((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN13))||((Copy_u8Port == GPIO_u8_PORTA)&&(Copy_u8Pin == GPIO_u8_PIN14)))
 8000a96:	79fb      	ldrb	r3, [r7, #7]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	d102      	bne.n	8000aa2 <GPIO_u8SetPinSpeed+0x32>
 8000a9c:	79bb      	ldrb	r3, [r7, #6]
 8000a9e:	2b0d      	cmp	r3, #13
 8000aa0:	d005      	beq.n	8000aae <GPIO_u8SetPinSpeed+0x3e>
 8000aa2:	79fb      	ldrb	r3, [r7, #7]
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	d106      	bne.n	8000ab6 <GPIO_u8SetPinSpeed+0x46>
 8000aa8:	79bb      	ldrb	r3, [r7, #6]
 8000aaa:	2b0e      	cmp	r3, #14
 8000aac:	d103      	bne.n	8000ab6 <GPIO_u8SetPinSpeed+0x46>
	{
		Local_u8ErrorState=4;
 8000aae:	2304      	movs	r3, #4
 8000ab0:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 8000ab2:	7bfb      	ldrb	r3, [r7, #15]
 8000ab4:	e161      	b.n	8000d7a <GPIO_u8SetPinSpeed+0x30a>
	}
	if(((Copy_u8Port ==GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN3))||((Copy_u8Port == GPIO_u8_PORTB)&&(Copy_u8Pin == GPIO_u8_PIN4)))
 8000ab6:	79fb      	ldrb	r3, [r7, #7]
 8000ab8:	2b01      	cmp	r3, #1
 8000aba:	d102      	bne.n	8000ac2 <GPIO_u8SetPinSpeed+0x52>
 8000abc:	79bb      	ldrb	r3, [r7, #6]
 8000abe:	2b03      	cmp	r3, #3
 8000ac0:	d005      	beq.n	8000ace <GPIO_u8SetPinSpeed+0x5e>
 8000ac2:	79fb      	ldrb	r3, [r7, #7]
 8000ac4:	2b01      	cmp	r3, #1
 8000ac6:	d106      	bne.n	8000ad6 <GPIO_u8SetPinSpeed+0x66>
 8000ac8:	79bb      	ldrb	r3, [r7, #6]
 8000aca:	2b04      	cmp	r3, #4
 8000acc:	d103      	bne.n	8000ad6 <GPIO_u8SetPinSpeed+0x66>
	{
		Local_u8ErrorState=4;
 8000ace:	2304      	movs	r3, #4
 8000ad0:	73fb      	strb	r3, [r7, #15]
		return Local_u8ErrorState;
 8000ad2:	7bfb      	ldrb	r3, [r7, #15]
 8000ad4:	e151      	b.n	8000d7a <GPIO_u8SetPinSpeed+0x30a>
	}
	if(Copy_u8Pin<=GPIO_u8_PIN15)
 8000ad6:	79bb      	ldrb	r3, [r7, #6]
 8000ad8:	2b0f      	cmp	r3, #15
 8000ada:	f200 814b 	bhi.w	8000d74 <GPIO_u8SetPinSpeed+0x304>
	{
		if(Copy_u8Speed==GPIO_PIN_LOW_SPEED)
 8000ade:	797b      	ldrb	r3, [r7, #5]
 8000ae0:	2b00      	cmp	r3, #0
 8000ae2:	d151      	bne.n	8000b88 <GPIO_u8SetPinSpeed+0x118>
		{
			switch (Copy_u8Port)
 8000ae4:	79fb      	ldrb	r3, [r7, #7]
 8000ae6:	2b02      	cmp	r3, #2
 8000ae8:	d034      	beq.n	8000b54 <GPIO_u8SetPinSpeed+0xe4>
 8000aea:	2b02      	cmp	r3, #2
 8000aec:	dc49      	bgt.n	8000b82 <GPIO_u8SetPinSpeed+0x112>
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	d002      	beq.n	8000af8 <GPIO_u8SetPinSpeed+0x88>
 8000af2:	2b01      	cmp	r3, #1
 8000af4:	d017      	beq.n	8000b26 <GPIO_u8SetPinSpeed+0xb6>
 8000af6:	e044      	b.n	8000b82 <GPIO_u8SetPinSpeed+0x112>
			{
				case GPIO_u8_PORTA  :
				{
					
					CLR_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit1);
 8000af8:	4ba3      	ldr	r3, [pc, #652]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000afa:	681b      	ldr	r3, [r3, #0]
 8000afc:	7bba      	ldrb	r2, [r7, #14]
 8000afe:	2101      	movs	r1, #1
 8000b00:	fa01 f202 	lsl.w	r2, r1, r2
 8000b04:	43d2      	mvns	r2, r2
 8000b06:	4611      	mov	r1, r2
 8000b08:	4a9f      	ldr	r2, [pc, #636]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000b0a:	400b      	ands	r3, r1
 8000b0c:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit2);
 8000b0e:	4b9e      	ldr	r3, [pc, #632]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000b10:	681b      	ldr	r3, [r3, #0]
 8000b12:	7b7a      	ldrb	r2, [r7, #13]
 8000b14:	2101      	movs	r1, #1
 8000b16:	fa01 f202 	lsl.w	r2, r1, r2
 8000b1a:	43d2      	mvns	r2, r2
 8000b1c:	4611      	mov	r1, r2
 8000b1e:	4a9a      	ldr	r2, [pc, #616]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000b20:	400b      	ands	r3, r1
 8000b22:	6013      	str	r3, [r2, #0]
					
					
					break;
 8000b24:	e128      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTB  :
				{
					CLR_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit1);
 8000b26:	4b99      	ldr	r3, [pc, #612]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000b28:	681b      	ldr	r3, [r3, #0]
 8000b2a:	7bba      	ldrb	r2, [r7, #14]
 8000b2c:	2101      	movs	r1, #1
 8000b2e:	fa01 f202 	lsl.w	r2, r1, r2
 8000b32:	43d2      	mvns	r2, r2
 8000b34:	4611      	mov	r1, r2
 8000b36:	4a95      	ldr	r2, [pc, #596]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000b38:	400b      	ands	r3, r1
 8000b3a:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit2);
 8000b3c:	4b93      	ldr	r3, [pc, #588]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	7b7a      	ldrb	r2, [r7, #13]
 8000b42:	2101      	movs	r1, #1
 8000b44:	fa01 f202 	lsl.w	r2, r1, r2
 8000b48:	43d2      	mvns	r2, r2
 8000b4a:	4611      	mov	r1, r2
 8000b4c:	4a8f      	ldr	r2, [pc, #572]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000b4e:	400b      	ands	r3, r1
 8000b50:	6013      	str	r3, [r2, #0]
					break;
 8000b52:	e111      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTC :
				{
					CLR_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit1);
 8000b54:	4b8e      	ldr	r3, [pc, #568]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000b56:	681b      	ldr	r3, [r3, #0]
 8000b58:	7bba      	ldrb	r2, [r7, #14]
 8000b5a:	2101      	movs	r1, #1
 8000b5c:	fa01 f202 	lsl.w	r2, r1, r2
 8000b60:	43d2      	mvns	r2, r2
 8000b62:	4611      	mov	r1, r2
 8000b64:	4a8a      	ldr	r2, [pc, #552]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000b66:	400b      	ands	r3, r1
 8000b68:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit2);
 8000b6a:	4b89      	ldr	r3, [pc, #548]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000b6c:	681b      	ldr	r3, [r3, #0]
 8000b6e:	7b7a      	ldrb	r2, [r7, #13]
 8000b70:	2101      	movs	r1, #1
 8000b72:	fa01 f202 	lsl.w	r2, r1, r2
 8000b76:	43d2      	mvns	r2, r2
 8000b78:	4611      	mov	r1, r2
 8000b7a:	4a85      	ldr	r2, [pc, #532]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000b7c:	400b      	ands	r3, r1
 8000b7e:	6013      	str	r3, [r2, #0]
					break;
 8000b80:	e0fa      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				
				default: Local_u8ErrorState=2;
 8000b82:	2302      	movs	r3, #2
 8000b84:	73fb      	strb	r3, [r7, #15]
 8000b86:	e0f7      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
			}
		}
		else if (Copy_u8Speed==GPIO_PIN_MEDIUM_SPEED)
 8000b88:	797b      	ldrb	r3, [r7, #5]
 8000b8a:	2b01      	cmp	r3, #1
 8000b8c:	d14e      	bne.n	8000c2c <GPIO_u8SetPinSpeed+0x1bc>
		{
			switch (Copy_u8Port)
 8000b8e:	79fb      	ldrb	r3, [r7, #7]
 8000b90:	2b02      	cmp	r3, #2
 8000b92:	d032      	beq.n	8000bfa <GPIO_u8SetPinSpeed+0x18a>
 8000b94:	2b02      	cmp	r3, #2
 8000b96:	dc46      	bgt.n	8000c26 <GPIO_u8SetPinSpeed+0x1b6>
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d002      	beq.n	8000ba2 <GPIO_u8SetPinSpeed+0x132>
 8000b9c:	2b01      	cmp	r3, #1
 8000b9e:	d016      	beq.n	8000bce <GPIO_u8SetPinSpeed+0x15e>
 8000ba0:	e041      	b.n	8000c26 <GPIO_u8SetPinSpeed+0x1b6>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit1);
 8000ba2:	4b79      	ldr	r3, [pc, #484]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000ba4:	681b      	ldr	r3, [r3, #0]
 8000ba6:	7bba      	ldrb	r2, [r7, #14]
 8000ba8:	2101      	movs	r1, #1
 8000baa:	fa01 f202 	lsl.w	r2, r1, r2
 8000bae:	4611      	mov	r1, r2
 8000bb0:	4a75      	ldr	r2, [pc, #468]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000bb2:	430b      	orrs	r3, r1
 8000bb4:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit2);
 8000bb6:	4b74      	ldr	r3, [pc, #464]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	7b7a      	ldrb	r2, [r7, #13]
 8000bbc:	2101      	movs	r1, #1
 8000bbe:	fa01 f202 	lsl.w	r2, r1, r2
 8000bc2:	43d2      	mvns	r2, r2
 8000bc4:	4611      	mov	r1, r2
 8000bc6:	4a70      	ldr	r2, [pc, #448]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000bc8:	400b      	ands	r3, r1
 8000bca:	6013      	str	r3, [r2, #0]
					break;
 8000bcc:	e0d4      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit1);
 8000bce:	4b6f      	ldr	r3, [pc, #444]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	7bba      	ldrb	r2, [r7, #14]
 8000bd4:	2101      	movs	r1, #1
 8000bd6:	fa01 f202 	lsl.w	r2, r1, r2
 8000bda:	4611      	mov	r1, r2
 8000bdc:	4a6b      	ldr	r2, [pc, #428]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000bde:	430b      	orrs	r3, r1
 8000be0:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit2);
 8000be2:	4b6a      	ldr	r3, [pc, #424]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000be4:	681b      	ldr	r3, [r3, #0]
 8000be6:	7b7a      	ldrb	r2, [r7, #13]
 8000be8:	2101      	movs	r1, #1
 8000bea:	fa01 f202 	lsl.w	r2, r1, r2
 8000bee:	43d2      	mvns	r2, r2
 8000bf0:	4611      	mov	r1, r2
 8000bf2:	4a66      	ldr	r2, [pc, #408]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000bf4:	400b      	ands	r3, r1
 8000bf6:	6013      	str	r3, [r2, #0]
					break;
 8000bf8:	e0be      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit1);
 8000bfa:	4b65      	ldr	r3, [pc, #404]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000bfc:	681b      	ldr	r3, [r3, #0]
 8000bfe:	7bba      	ldrb	r2, [r7, #14]
 8000c00:	2101      	movs	r1, #1
 8000c02:	fa01 f202 	lsl.w	r2, r1, r2
 8000c06:	4611      	mov	r1, r2
 8000c08:	4a61      	ldr	r2, [pc, #388]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000c0a:	430b      	orrs	r3, r1
 8000c0c:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit2);
 8000c0e:	4b60      	ldr	r3, [pc, #384]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	7b7a      	ldrb	r2, [r7, #13]
 8000c14:	2101      	movs	r1, #1
 8000c16:	fa01 f202 	lsl.w	r2, r1, r2
 8000c1a:	43d2      	mvns	r2, r2
 8000c1c:	4611      	mov	r1, r2
 8000c1e:	4a5c      	ldr	r2, [pc, #368]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000c20:	400b      	ands	r3, r1
 8000c22:	6013      	str	r3, [r2, #0]
					break;
 8000c24:	e0a8      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				
				default: Local_u8ErrorState=2;
 8000c26:	2302      	movs	r3, #2
 8000c28:	73fb      	strb	r3, [r7, #15]
 8000c2a:	e0a5      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
			}
		}
		else if (Copy_u8Speed==GPIO_PIN_HIGH_SPEED)
 8000c2c:	797b      	ldrb	r3, [r7, #5]
 8000c2e:	2b02      	cmp	r3, #2
 8000c30:	d14e      	bne.n	8000cd0 <GPIO_u8SetPinSpeed+0x260>
		{
			switch (Copy_u8Port)
 8000c32:	79fb      	ldrb	r3, [r7, #7]
 8000c34:	2b02      	cmp	r3, #2
 8000c36:	d032      	beq.n	8000c9e <GPIO_u8SetPinSpeed+0x22e>
 8000c38:	2b02      	cmp	r3, #2
 8000c3a:	dc46      	bgt.n	8000cca <GPIO_u8SetPinSpeed+0x25a>
 8000c3c:	2b00      	cmp	r3, #0
 8000c3e:	d002      	beq.n	8000c46 <GPIO_u8SetPinSpeed+0x1d6>
 8000c40:	2b01      	cmp	r3, #1
 8000c42:	d016      	beq.n	8000c72 <GPIO_u8SetPinSpeed+0x202>
 8000c44:	e041      	b.n	8000cca <GPIO_u8SetPinSpeed+0x25a>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit2);
 8000c46:	4b50      	ldr	r3, [pc, #320]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000c48:	681b      	ldr	r3, [r3, #0]
 8000c4a:	7b7a      	ldrb	r2, [r7, #13]
 8000c4c:	2101      	movs	r1, #1
 8000c4e:	fa01 f202 	lsl.w	r2, r1, r2
 8000c52:	4611      	mov	r1, r2
 8000c54:	4a4c      	ldr	r2, [pc, #304]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000c56:	430b      	orrs	r3, r1
 8000c58:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit1);
 8000c5a:	4b4b      	ldr	r3, [pc, #300]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000c5c:	681b      	ldr	r3, [r3, #0]
 8000c5e:	7bba      	ldrb	r2, [r7, #14]
 8000c60:	2101      	movs	r1, #1
 8000c62:	fa01 f202 	lsl.w	r2, r1, r2
 8000c66:	43d2      	mvns	r2, r2
 8000c68:	4611      	mov	r1, r2
 8000c6a:	4a47      	ldr	r2, [pc, #284]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000c6c:	400b      	ands	r3, r1
 8000c6e:	6013      	str	r3, [r2, #0]
					break;
 8000c70:	e082      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit2);
 8000c72:	4b46      	ldr	r3, [pc, #280]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000c74:	681b      	ldr	r3, [r3, #0]
 8000c76:	7b7a      	ldrb	r2, [r7, #13]
 8000c78:	2101      	movs	r1, #1
 8000c7a:	fa01 f202 	lsl.w	r2, r1, r2
 8000c7e:	4611      	mov	r1, r2
 8000c80:	4a42      	ldr	r2, [pc, #264]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000c82:	430b      	orrs	r3, r1
 8000c84:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit1);
 8000c86:	4b41      	ldr	r3, [pc, #260]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000c88:	681b      	ldr	r3, [r3, #0]
 8000c8a:	7bba      	ldrb	r2, [r7, #14]
 8000c8c:	2101      	movs	r1, #1
 8000c8e:	fa01 f202 	lsl.w	r2, r1, r2
 8000c92:	43d2      	mvns	r2, r2
 8000c94:	4611      	mov	r1, r2
 8000c96:	4a3d      	ldr	r2, [pc, #244]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000c98:	400b      	ands	r3, r1
 8000c9a:	6013      	str	r3, [r2, #0]
					break;
 8000c9c:	e06c      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit2);
 8000c9e:	4b3c      	ldr	r3, [pc, #240]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000ca0:	681b      	ldr	r3, [r3, #0]
 8000ca2:	7b7a      	ldrb	r2, [r7, #13]
 8000ca4:	2101      	movs	r1, #1
 8000ca6:	fa01 f202 	lsl.w	r2, r1, r2
 8000caa:	4611      	mov	r1, r2
 8000cac:	4a38      	ldr	r2, [pc, #224]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000cae:	430b      	orrs	r3, r1
 8000cb0:	6013      	str	r3, [r2, #0]
					CLR_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit1);
 8000cb2:	4b37      	ldr	r3, [pc, #220]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	7bba      	ldrb	r2, [r7, #14]
 8000cb8:	2101      	movs	r1, #1
 8000cba:	fa01 f202 	lsl.w	r2, r1, r2
 8000cbe:	43d2      	mvns	r2, r2
 8000cc0:	4611      	mov	r1, r2
 8000cc2:	4a33      	ldr	r2, [pc, #204]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000cc4:	400b      	ands	r3, r1
 8000cc6:	6013      	str	r3, [r2, #0]
					break;
 8000cc8:	e056      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				
				default: Local_u8ErrorState=2;
 8000cca:	2302      	movs	r3, #2
 8000ccc:	73fb      	strb	r3, [r7, #15]
 8000cce:	e053      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
			}
		}
		else if (Copy_u8Speed==GPIO_PIN_VERY_HIGH_SPEED	)
 8000cd0:	797b      	ldrb	r3, [r7, #5]
 8000cd2:	2b03      	cmp	r3, #3
 8000cd4:	d14b      	bne.n	8000d6e <GPIO_u8SetPinSpeed+0x2fe>
		{
			switch (Copy_u8Port)
 8000cd6:	79fb      	ldrb	r3, [r7, #7]
 8000cd8:	2b02      	cmp	r3, #2
 8000cda:	d030      	beq.n	8000d3e <GPIO_u8SetPinSpeed+0x2ce>
 8000cdc:	2b02      	cmp	r3, #2
 8000cde:	dc43      	bgt.n	8000d68 <GPIO_u8SetPinSpeed+0x2f8>
 8000ce0:	2b00      	cmp	r3, #0
 8000ce2:	d002      	beq.n	8000cea <GPIO_u8SetPinSpeed+0x27a>
 8000ce4:	2b01      	cmp	r3, #1
 8000ce6:	d015      	beq.n	8000d14 <GPIO_u8SetPinSpeed+0x2a4>
 8000ce8:	e03e      	b.n	8000d68 <GPIO_u8SetPinSpeed+0x2f8>
			{
				case GPIO_u8_PORTA  :
				{
					SET_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit1);
 8000cea:	4b27      	ldr	r3, [pc, #156]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	7bba      	ldrb	r2, [r7, #14]
 8000cf0:	2101      	movs	r1, #1
 8000cf2:	fa01 f202 	lsl.w	r2, r1, r2
 8000cf6:	4611      	mov	r1, r2
 8000cf8:	4a23      	ldr	r2, [pc, #140]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000cfa:	430b      	orrs	r3, r1
 8000cfc:	6013      	str	r3, [r2, #0]
					SET_BIT(GPIOA_OSPEEDR,Local_u8Config_Bit2);
 8000cfe:	4b22      	ldr	r3, [pc, #136]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000d00:	681b      	ldr	r3, [r3, #0]
 8000d02:	7b7a      	ldrb	r2, [r7, #13]
 8000d04:	2101      	movs	r1, #1
 8000d06:	fa01 f202 	lsl.w	r2, r1, r2
 8000d0a:	4611      	mov	r1, r2
 8000d0c:	4a1e      	ldr	r2, [pc, #120]	; (8000d88 <GPIO_u8SetPinSpeed+0x318>)
 8000d0e:	430b      	orrs	r3, r1
 8000d10:	6013      	str	r3, [r2, #0]
					break;
 8000d12:	e031      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTB  :
				{
					SET_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit1);
 8000d14:	4b1d      	ldr	r3, [pc, #116]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	7bba      	ldrb	r2, [r7, #14]
 8000d1a:	2101      	movs	r1, #1
 8000d1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000d20:	4611      	mov	r1, r2
 8000d22:	4a1a      	ldr	r2, [pc, #104]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000d24:	430b      	orrs	r3, r1
 8000d26:	6013      	str	r3, [r2, #0]
					SET_BIT(GPIOB_OSPEEDR,Local_u8Config_Bit2);
 8000d28:	4b18      	ldr	r3, [pc, #96]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000d2a:	681b      	ldr	r3, [r3, #0]
 8000d2c:	7b7a      	ldrb	r2, [r7, #13]
 8000d2e:	2101      	movs	r1, #1
 8000d30:	fa01 f202 	lsl.w	r2, r1, r2
 8000d34:	4611      	mov	r1, r2
 8000d36:	4a15      	ldr	r2, [pc, #84]	; (8000d8c <GPIO_u8SetPinSpeed+0x31c>)
 8000d38:	430b      	orrs	r3, r1
 8000d3a:	6013      	str	r3, [r2, #0]
					break;
 8000d3c:	e01c      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				case GPIO_u8_PORTC :
				{
					SET_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit1);
 8000d3e:	4b14      	ldr	r3, [pc, #80]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000d40:	681b      	ldr	r3, [r3, #0]
 8000d42:	7bba      	ldrb	r2, [r7, #14]
 8000d44:	2101      	movs	r1, #1
 8000d46:	fa01 f202 	lsl.w	r2, r1, r2
 8000d4a:	4611      	mov	r1, r2
 8000d4c:	4a10      	ldr	r2, [pc, #64]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000d4e:	430b      	orrs	r3, r1
 8000d50:	6013      	str	r3, [r2, #0]
					SET_BIT(GPIOC_OSPEEDR,Local_u8Config_Bit2);
 8000d52:	4b0f      	ldr	r3, [pc, #60]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	7b7a      	ldrb	r2, [r7, #13]
 8000d58:	2101      	movs	r1, #1
 8000d5a:	fa01 f202 	lsl.w	r2, r1, r2
 8000d5e:	4611      	mov	r1, r2
 8000d60:	4a0b      	ldr	r2, [pc, #44]	; (8000d90 <GPIO_u8SetPinSpeed+0x320>)
 8000d62:	430b      	orrs	r3, r1
 8000d64:	6013      	str	r3, [r2, #0]
					break;
 8000d66:	e007      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
				}
				
				default: Local_u8ErrorState=2;
 8000d68:	2302      	movs	r3, #2
 8000d6a:	73fb      	strb	r3, [r7, #15]
 8000d6c:	e004      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
			}
		}
		else 	Local_u8ErrorState=3;
 8000d6e:	2303      	movs	r3, #3
 8000d70:	73fb      	strb	r3, [r7, #15]
 8000d72:	e001      	b.n	8000d78 <GPIO_u8SetPinSpeed+0x308>
		
	}
	else Local_u8ErrorState=1 ;
 8000d74:	2301      	movs	r3, #1
 8000d76:	73fb      	strb	r3, [r7, #15]
	
	return Local_u8ErrorState ;
 8000d78:	7bfb      	ldrb	r3, [r7, #15]
}
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	3714      	adds	r7, #20
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d84:	4770      	bx	lr
 8000d86:	bf00      	nop
 8000d88:	40020008 	.word	0x40020008
 8000d8c:	40020408 	.word	0x40020408
 8000d90:	40020808 	.word	0x40020808

08000d94 <RCC_voidSysClockInit>:
#include "RCC_config.h"



void RCC_voidSysClockInit(void)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	af00      	add	r7, sp, #0
	#if(Enable_HSI)
	RCC_EnableHSI();
#elif(Enable_HSE)
	RCC_EnableHSE();
 8000d98:	f000 f802 	bl	8000da0 <RCC_EnableHSE>
#elif(Enable_PLL)
	RCC_EnablePLL(PLL_CLK_Source, PLL_Multiplication_Factor);
#else
	#error "invalid Config"
#endif	
}
 8000d9c:	bf00      	nop
 8000d9e:	bd80      	pop	{r7, pc}

08000da0 <RCC_EnableHSE>:
	SET_BIT(RCC_CIR, RCC_CIR_HSIRDYC); //Clear HSI ready flag.
	CLR_BIT(RCC_CFGR, RCC_CFGR_SW0); //Select HSI as system clock.
	CLR_BIT(RCC_CFGR, RCC_CFGR_SW1); //Select HSI as system clock.
}

void RCC_EnableHSE(void){
 8000da0:	b480      	push	{r7}
 8000da2:	af00      	add	r7, sp, #0
	SET_BIT(RCC_CR, RCC_CR_HSEON); //Enable HSE.
 8000da4:	4b12      	ldr	r3, [pc, #72]	; (8000df0 <RCC_EnableHSE+0x50>)
 8000da6:	681b      	ldr	r3, [r3, #0]
 8000da8:	4a11      	ldr	r2, [pc, #68]	; (8000df0 <RCC_EnableHSE+0x50>)
 8000daa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000dae:	6013      	str	r3, [r2, #0]
	while(GET_BIT(RCC_CR, RCC_CR_HSERDY)); //Polling until HSE is ready.
 8000db0:	bf00      	nop
 8000db2:	4b0f      	ldr	r3, [pc, #60]	; (8000df0 <RCC_EnableHSE+0x50>)
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	0c5b      	lsrs	r3, r3, #17
 8000db8:	f003 0301 	and.w	r3, r3, #1
 8000dbc:	2b00      	cmp	r3, #0
 8000dbe:	d1f8      	bne.n	8000db2 <RCC_EnableHSE+0x12>
	SET_BIT(RCC_CIR, RCC_CIR_HSERDYC); //Clear HSE ready flag.
 8000dc0:	4b0c      	ldr	r3, [pc, #48]	; (8000df4 <RCC_EnableHSE+0x54>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	4a0b      	ldr	r2, [pc, #44]	; (8000df4 <RCC_EnableHSE+0x54>)
 8000dc6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000dca:	6013      	str	r3, [r2, #0]
	SET_BIT(RCC_CFGR, RCC_CFGR_SW0); //Select HSE as system clock.
 8000dcc:	4b0a      	ldr	r3, [pc, #40]	; (8000df8 <RCC_EnableHSE+0x58>)
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	4a09      	ldr	r2, [pc, #36]	; (8000df8 <RCC_EnableHSE+0x58>)
 8000dd2:	f043 0301 	orr.w	r3, r3, #1
 8000dd6:	6013      	str	r3, [r2, #0]
	CLR_BIT(RCC_CFGR, RCC_CFGR_SW1); //Select HSE as system clock.
 8000dd8:	4b07      	ldr	r3, [pc, #28]	; (8000df8 <RCC_EnableHSE+0x58>)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	4a06      	ldr	r2, [pc, #24]	; (8000df8 <RCC_EnableHSE+0x58>)
 8000dde:	f023 0302 	bic.w	r3, r3, #2
 8000de2:	6013      	str	r3, [r2, #0]
}
 8000de4:	bf00      	nop
 8000de6:	46bd      	mov	sp, r7
 8000de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dec:	4770      	bx	lr
 8000dee:	bf00      	nop
 8000df0:	40023800 	.word	0x40023800
 8000df4:	4002380c 	.word	0x4002380c
 8000df8:	40023808 	.word	0x40023808

08000dfc <RCC_voidEnablePerClk>:



void	RCC_voidEnablePerClk(u8 Bus,u8 Per)
{
 8000dfc:	b480      	push	{r7}
 8000dfe:	b083      	sub	sp, #12
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	4603      	mov	r3, r0
 8000e04:	460a      	mov	r2, r1
 8000e06:	71fb      	strb	r3, [r7, #7]
 8000e08:	4613      	mov	r3, r2
 8000e0a:	71bb      	strb	r3, [r7, #6]
	/*		Range Check			*/
	if(Per < 32)
 8000e0c:	79bb      	ldrb	r3, [r7, #6]
 8000e0e:	2b1f      	cmp	r3, #31
 8000e10:	d836      	bhi.n	8000e80 <RCC_voidEnablePerClk+0x84>
	{
		switch(Bus)
 8000e12:	79fb      	ldrb	r3, [r7, #7]
 8000e14:	3b01      	subs	r3, #1
 8000e16:	2b03      	cmp	r3, #3
 8000e18:	d832      	bhi.n	8000e80 <RCC_voidEnablePerClk+0x84>
 8000e1a:	a201      	add	r2, pc, #4	; (adr r2, 8000e20 <RCC_voidEnablePerClk+0x24>)
 8000e1c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e20:	08000e31 	.word	0x08000e31
 8000e24:	08000e45 	.word	0x08000e45
 8000e28:	08000e59 	.word	0x08000e59
 8000e2c:	08000e6d 	.word	0x08000e6d
		{
			case	RCC_AHB1 : SET_BIT(RCC_AHB1ENR,Per);
 8000e30:	4b16      	ldr	r3, [pc, #88]	; (8000e8c <RCC_voidEnablePerClk+0x90>)
 8000e32:	681b      	ldr	r3, [r3, #0]
 8000e34:	79ba      	ldrb	r2, [r7, #6]
 8000e36:	2101      	movs	r1, #1
 8000e38:	fa01 f202 	lsl.w	r2, r1, r2
 8000e3c:	4611      	mov	r1, r2
 8000e3e:	4a13      	ldr	r2, [pc, #76]	; (8000e8c <RCC_voidEnablePerClk+0x90>)
 8000e40:	430b      	orrs	r3, r1
 8000e42:	6013      	str	r3, [r2, #0]
			case	RCC_AHB2 : SET_BIT(RCC_AHB2ENR,Per);
 8000e44:	4b12      	ldr	r3, [pc, #72]	; (8000e90 <RCC_voidEnablePerClk+0x94>)
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	79ba      	ldrb	r2, [r7, #6]
 8000e4a:	2101      	movs	r1, #1
 8000e4c:	fa01 f202 	lsl.w	r2, r1, r2
 8000e50:	4611      	mov	r1, r2
 8000e52:	4a0f      	ldr	r2, [pc, #60]	; (8000e90 <RCC_voidEnablePerClk+0x94>)
 8000e54:	430b      	orrs	r3, r1
 8000e56:	6013      	str	r3, [r2, #0]
			case	RCC_APB1 : SET_BIT(RCC_APB1ENR,Per);
 8000e58:	4b0e      	ldr	r3, [pc, #56]	; (8000e94 <RCC_voidEnablePerClk+0x98>)
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	79ba      	ldrb	r2, [r7, #6]
 8000e5e:	2101      	movs	r1, #1
 8000e60:	fa01 f202 	lsl.w	r2, r1, r2
 8000e64:	4611      	mov	r1, r2
 8000e66:	4a0b      	ldr	r2, [pc, #44]	; (8000e94 <RCC_voidEnablePerClk+0x98>)
 8000e68:	430b      	orrs	r3, r1
 8000e6a:	6013      	str	r3, [r2, #0]
			case	RCC_APB2 : SET_BIT(RCC_APB2ENR,Per);
 8000e6c:	4b0a      	ldr	r3, [pc, #40]	; (8000e98 <RCC_voidEnablePerClk+0x9c>)
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	79ba      	ldrb	r2, [r7, #6]
 8000e72:	2101      	movs	r1, #1
 8000e74:	fa01 f202 	lsl.w	r2, r1, r2
 8000e78:	4611      	mov	r1, r2
 8000e7a:	4a07      	ldr	r2, [pc, #28]	; (8000e98 <RCC_voidEnablePerClk+0x9c>)
 8000e7c:	430b      	orrs	r3, r1
 8000e7e:	6013      	str	r3, [r2, #0]
		}
	}
	else
	{			/*		OUT OF RANGE		*/		}
}
 8000e80:	bf00      	nop
 8000e82:	370c      	adds	r7, #12
 8000e84:	46bd      	mov	sp, r7
 8000e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e8a:	4770      	bx	lr
 8000e8c:	40023830 	.word	0x40023830
 8000e90:	40023834 	.word	0x40023834
 8000e94:	40023840 	.word	0x40023840
 8000e98:	40023844 	.word	0x40023844

08000e9c <SmallDelay>:
#include"GPIO_config.h"
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
void SmallDelay (void)
{
 8000e9c:	b480      	push	{r7}
 8000e9e:	b083      	sub	sp, #12
 8000ea0:	af00      	add	r7, sp, #0
    for(u32 s = 0 ; s<200 ; s++ )
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	607b      	str	r3, [r7, #4]
 8000ea6:	e003      	b.n	8000eb0 <SmallDelay+0x14>
    {
        asm("NOP");
 8000ea8:	bf00      	nop
    for(u32 s = 0 ; s<200 ; s++ )
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	3301      	adds	r3, #1
 8000eae:	607b      	str	r3, [r7, #4]
 8000eb0:	687b      	ldr	r3, [r7, #4]
 8000eb2:	2bc7      	cmp	r3, #199	; 0xc7
 8000eb4:	d9f8      	bls.n	8000ea8 <SmallDelay+0xc>
    }
}
 8000eb6:	bf00      	nop
 8000eb8:	bf00      	nop
 8000eba:	370c      	adds	r7, #12
 8000ebc:	46bd      	mov	sp, r7
 8000ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec2:	4770      	bx	lr

08000ec4 <main>:
int main(void)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	b082      	sub	sp, #8
 8000ec8:	af00      	add	r7, sp, #0
	RCC_voidSysClockInit();
 8000eca:	f7ff ff63 	bl	8000d94 <RCC_voidSysClockInit>
	RCC_voidEnablePerClk(RCC_AHB1,AHB1_GPIOA );
 8000ece:	2100      	movs	r1, #0
 8000ed0:	2001      	movs	r0, #1
 8000ed2:	f7ff ff93 	bl	8000dfc <RCC_voidEnablePerClk>
	GPIO_u8SetPinDirection(GPIO_u8_PORTA, GPIO_u8_PIN0, GPIO_u8_PIN_INPUT);
 8000ed6:	2200      	movs	r2, #0
 8000ed8:	2100      	movs	r1, #0
 8000eda:	2000      	movs	r0, #0
 8000edc:	f7ff f97a 	bl	80001d4 <GPIO_u8SetPinDirection>
	GPIO_u8SetPinDirection(GPIO_u8_PORTA, GPIO_u8_PIN1, GPIO_u8_PIN_INPUT);
 8000ee0:	2200      	movs	r2, #0
 8000ee2:	2101      	movs	r1, #1
 8000ee4:	2000      	movs	r0, #0
 8000ee6:	f7ff f975 	bl	80001d4 <GPIO_u8SetPinDirection>
	GPIO_u8SetPinDirection(GPIO_u8_PORTA, GPIO_u8_PIN2, GPIO_u8_PIN_INPUT);
 8000eea:	2200      	movs	r2, #0
 8000eec:	2102      	movs	r1, #2
 8000eee:	2000      	movs	r0, #0
 8000ef0:	f7ff f970 	bl	80001d4 <GPIO_u8SetPinDirection>
	GPIO_u8SetPinDirection(GPIO_u8_PORTA, GPIO_u8_PIN3, GPIO_u8_PIN_OUTPUT);
 8000ef4:	2201      	movs	r2, #1
 8000ef6:	2103      	movs	r1, #3
 8000ef8:	2000      	movs	r0, #0
 8000efa:	f7ff f96b 	bl	80001d4 <GPIO_u8SetPinDirection>
	GPIO_u8SetPinDirection(GPIO_u8_PORTA, GPIO_u8_PIN4, GPIO_u8_PIN_OUTPUT);
 8000efe:	2201      	movs	r2, #1
 8000f00:	2104      	movs	r1, #4
 8000f02:	2000      	movs	r0, #0
 8000f04:	f7ff f966 	bl	80001d4 <GPIO_u8SetPinDirection>
	GPIO_u8SetPinDirection(GPIO_u8_PORTA, GPIO_u8_PIN5, GPIO_u8_PIN_OUTPUT);
 8000f08:	2201      	movs	r2, #1
 8000f0a:	2105      	movs	r1, #5
 8000f0c:	2000      	movs	r0, #0
 8000f0e:	f7ff f961 	bl	80001d4 <GPIO_u8SetPinDirection>
	u8 Local_u8Pin1Value ;
	u8 Local_u8Pin2Value ;

	for(;;)
	{
		GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN3 , GPIO_u8_PIN_LOW);
 8000f12:	2200      	movs	r2, #0
 8000f14:	2103      	movs	r1, #3
 8000f16:	2000      	movs	r0, #0
 8000f18:	f7ff faae 	bl	8000478 <GPIO_u8SetPinValue>
		GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN4 , GPIO_u8_PIN_LOW);
 8000f1c:	2200      	movs	r2, #0
 8000f1e:	2104      	movs	r1, #4
 8000f20:	2000      	movs	r0, #0
 8000f22:	f7ff faa9 	bl	8000478 <GPIO_u8SetPinValue>
		GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN5 , GPIO_u8_PIN_LOW);
 8000f26:	2200      	movs	r2, #0
 8000f28:	2105      	movs	r1, #5
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	f7ff faa4 	bl	8000478 <GPIO_u8SetPinValue>
		GPIO_u8GetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN0 , &Local_u8Pin0Value);
 8000f30:	1dfb      	adds	r3, r7, #7
 8000f32:	461a      	mov	r2, r3
 8000f34:	2100      	movs	r1, #0
 8000f36:	2000      	movs	r0, #0
 8000f38:	f7ff fb44 	bl	80005c4 <GPIO_u8GetPinValue>
		GPIO_u8GetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN1 , &Local_u8Pin1Value);
 8000f3c:	1dbb      	adds	r3, r7, #6
 8000f3e:	461a      	mov	r2, r3
 8000f40:	2101      	movs	r1, #1
 8000f42:	2000      	movs	r0, #0
 8000f44:	f7ff fb3e 	bl	80005c4 <GPIO_u8GetPinValue>
		GPIO_u8GetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN2 , &Local_u8Pin2Value);
 8000f48:	1d7b      	adds	r3, r7, #5
 8000f4a:	461a      	mov	r2, r3
 8000f4c:	2102      	movs	r1, #2
 8000f4e:	2000      	movs	r0, #0
 8000f50:	f7ff fb38 	bl	80005c4 <GPIO_u8GetPinValue>
		if(Local_u8Pin0Value==0)
 8000f54:	79fb      	ldrb	r3, [r7, #7]
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d104      	bne.n	8000f64 <main+0xa0>
			GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN3 , GPIO_u8_PIN_HIGH);
 8000f5a:	2201      	movs	r2, #1
 8000f5c:	2103      	movs	r1, #3
 8000f5e:	2000      	movs	r0, #0
 8000f60:	f7ff fa8a 	bl	8000478 <GPIO_u8SetPinValue>
		if(Local_u8Pin1Value==0)
 8000f64:	79bb      	ldrb	r3, [r7, #6]
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	d104      	bne.n	8000f74 <main+0xb0>
					GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN4 , GPIO_u8_PIN_HIGH);
 8000f6a:	2201      	movs	r2, #1
 8000f6c:	2104      	movs	r1, #4
 8000f6e:	2000      	movs	r0, #0
 8000f70:	f7ff fa82 	bl	8000478 <GPIO_u8SetPinValue>
		if(Local_u8Pin2Value==0)
 8000f74:	797b      	ldrb	r3, [r7, #5]
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d104      	bne.n	8000f84 <main+0xc0>
					GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN5 , GPIO_u8_PIN_HIGH);
 8000f7a:	2201      	movs	r2, #1
 8000f7c:	2105      	movs	r1, #5
 8000f7e:	2000      	movs	r0, #0
 8000f80:	f7ff fa7a 	bl	8000478 <GPIO_u8SetPinValue>
		SmallDelay();
 8000f84:	f7ff ff8a 	bl	8000e9c <SmallDelay>
		GPIO_u8SetPinValue (GPIO_u8_PORTA , GPIO_u8_PIN3 , GPIO_u8_PIN_LOW);
 8000f88:	e7c3      	b.n	8000f12 <main+0x4e>
	...

08000f8c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000f8c:	480d      	ldr	r0, [pc, #52]	; (8000fc4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000f8e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f90:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000f94:	480c      	ldr	r0, [pc, #48]	; (8000fc8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000f96:	490d      	ldr	r1, [pc, #52]	; (8000fcc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000f98:	4a0d      	ldr	r2, [pc, #52]	; (8000fd0 <LoopForever+0xe>)
  movs r3, #0
 8000f9a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000f9c:	e002      	b.n	8000fa4 <LoopCopyDataInit>

08000f9e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000f9e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000fa0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000fa2:	3304      	adds	r3, #4

08000fa4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000fa4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000fa6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000fa8:	d3f9      	bcc.n	8000f9e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000faa:	4a0a      	ldr	r2, [pc, #40]	; (8000fd4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000fac:	4c0a      	ldr	r4, [pc, #40]	; (8000fd8 <LoopForever+0x16>)
  movs r3, #0
 8000fae:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000fb0:	e001      	b.n	8000fb6 <LoopFillZerobss>

08000fb2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000fb2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000fb4:	3204      	adds	r2, #4

08000fb6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000fb6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000fb8:	d3fb      	bcc.n	8000fb2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000fba:	f000 f811 	bl	8000fe0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000fbe:	f7ff ff81 	bl	8000ec4 <main>

08000fc2 <LoopForever>:

LoopForever:
    b LoopForever
 8000fc2:	e7fe      	b.n	8000fc2 <LoopForever>
  ldr   r0, =_estack
 8000fc4:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000fc8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000fcc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000fd0:	08001048 	.word	0x08001048
  ldr r2, =_sbss
 8000fd4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000fd8:	2000001c 	.word	0x2000001c

08000fdc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000fdc:	e7fe      	b.n	8000fdc <ADC_IRQHandler>
	...

08000fe0 <__libc_init_array>:
 8000fe0:	b570      	push	{r4, r5, r6, lr}
 8000fe2:	4d0d      	ldr	r5, [pc, #52]	; (8001018 <__libc_init_array+0x38>)
 8000fe4:	4c0d      	ldr	r4, [pc, #52]	; (800101c <__libc_init_array+0x3c>)
 8000fe6:	1b64      	subs	r4, r4, r5
 8000fe8:	10a4      	asrs	r4, r4, #2
 8000fea:	2600      	movs	r6, #0
 8000fec:	42a6      	cmp	r6, r4
 8000fee:	d109      	bne.n	8001004 <__libc_init_array+0x24>
 8000ff0:	4d0b      	ldr	r5, [pc, #44]	; (8001020 <__libc_init_array+0x40>)
 8000ff2:	4c0c      	ldr	r4, [pc, #48]	; (8001024 <__libc_init_array+0x44>)
 8000ff4:	f000 f818 	bl	8001028 <_init>
 8000ff8:	1b64      	subs	r4, r4, r5
 8000ffa:	10a4      	asrs	r4, r4, #2
 8000ffc:	2600      	movs	r6, #0
 8000ffe:	42a6      	cmp	r6, r4
 8001000:	d105      	bne.n	800100e <__libc_init_array+0x2e>
 8001002:	bd70      	pop	{r4, r5, r6, pc}
 8001004:	f855 3b04 	ldr.w	r3, [r5], #4
 8001008:	4798      	blx	r3
 800100a:	3601      	adds	r6, #1
 800100c:	e7ee      	b.n	8000fec <__libc_init_array+0xc>
 800100e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001012:	4798      	blx	r3
 8001014:	3601      	adds	r6, #1
 8001016:	e7f2      	b.n	8000ffe <__libc_init_array+0x1e>
 8001018:	08001040 	.word	0x08001040
 800101c:	08001040 	.word	0x08001040
 8001020:	08001040 	.word	0x08001040
 8001024:	08001044 	.word	0x08001044

08001028 <_init>:
 8001028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800102a:	bf00      	nop
 800102c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800102e:	bc08      	pop	{r3}
 8001030:	469e      	mov	lr, r3
 8001032:	4770      	bx	lr

08001034 <_fini>:
 8001034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001036:	bf00      	nop
 8001038:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800103a:	bc08      	pop	{r3}
 800103c:	469e      	mov	lr, r3
 800103e:	4770      	bx	lr
